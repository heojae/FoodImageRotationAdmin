{"version":3,"sources":["proto/user_pb.js","proto/inference_pb.js","proto/user_fix_image_pb.js","proto/model_version_pb.js","proto/inference_grpc_web_pb.js","proto/user_fix_image_grpc_web_pb.js","proto/dataset_grpc_web_pb.js","proto/model_version_grpc_web_pb.js","pages/Login/LoginHeader.js","actions/ActionTypes.js","actions/index.js","pages/Login/LoginMain/LoginMainTitle.js","pages/Login/LoginMain/API/client.js","pages/Login/LoginMain/API/index.js","pages/Login/LoginMain/LoginMainForm.js","pages/Login/LoginMain/index.js","pages/Login/index.js","pages/Tool/ToolHeader/index.js","pages/Tool/ToolMiddle/ToolSidebar/ToolSidebarItem.js","pages/Tool/ToolMiddle/ToolSidebar/index.js","pages/Tool/ToolMiddle/ToolMain/ToolMainTitle.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/DropZone.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/ChoiceMode.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/Line/LineTitle.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/API/client.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/API/index.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/Line/LineBody.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/CheckResult.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/FixData.js","pages/Tool/ToolMiddle/ToolMain/RunDemo/index.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/API/client.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/API/index.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/ChoiceDataset.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/Line/LineTitle.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/Line/LineBody.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/ImageInfoOutput.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/SaveDataset.js","pages/Tool/ToolMiddle/ToolMain/DataCollect/index.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/Line/LineTitle.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/API/client.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/API/index.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/Line/LineBody.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/ModelVersionUsing.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/ModelVersionAll.js","pages/Tool/ToolMiddle/ToolMain/ModelVersion/index.js","pages/Tool/ToolMiddle/ToolMain/index.js","pages/Tool/ToolMiddle/index.js","pages/Tool/API/client.js","pages/Tool/API/index.js","pages/Tool/index.js","App.js","reducers/user.js","reducers/sidebar.js","reducers/tool.js","reducers/run_demo.js","reducers/data_collect.js","reducers/model_version.js","reducers/index.js","index.js","proto/empty_pb.js","proto/dataset_pb.js","proto/user_grpc_web_pb.js"],"names":["jspb","require","goog","global","Function","empty_pb","object","extend","proto","exportSymbol","UserInfo","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","LoginInfo","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","pk","getFieldWithDefault","email","profileImage","accessToken","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readInt32","setPk","readString","setEmail","setProfileImage","setAccessToken","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","getPk","writeInt32","getEmail","length","writeString","getProfileImage","getAccessToken","setProto3IntField","setProto3StringField","password","setPassword","getPassword","exports","BytesImage","InferenceResult","ModelPath","imageContent","getImageContent_asB64","readBytes","setImageContent","getImageContent_asU8","writeBytes","getImageContent","bytesAsB64","bytesAsU8","setProto3BytesField","modelDegree","exifDegree","confidence","getFloatingPointFieldWithDefault","success","getBooleanFieldWithDefault","setModelDegree","setExifDegree","readFloat","setConfidence","readBool","setSuccess","getModelDegree","getExifDegree","getConfidence","writeFloat","getSuccess","writeBool","setProto3FloatField","setProto3BooleanField","path","setPath","getPath","UserFixedImageInfo","fileName","userFixDegree","setFileName","setUserFixDegree","getFileName","getUserFixDegree","SelectedModelVersion","ModelVersionInfo","versionName","trainAcc","testAcc","modelFileName","isUsing","setVersionName","setTrainAcc","setTestAcc","setModelFileName","setIsUsing","getVersionName","getTrainAcc","getTestAcc","getModelFileName","getIsUsing","grpc","web","InferenceImageClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","InferenceImagePromiseClient","methodDescriptor_InferenceImage_Inference","MethodDescriptor","MethodType","UNARY","request","AbstractClientBase","MethodInfo","inference","metadata","callback","rpcCall","unaryCall","methodDescriptor_InferenceImage_LoadModel","Empty","loadModel","module","UserFixImageClient","UserFixImagePromiseClient","methodDescriptor_UserFixImage_SaveUserFixImage","saveUserFixImage","DatasetClient","DatasetPromiseClient","methodDescriptor_Dataset_GetDatasetInfoList","SERVER_STREAMING","DatasetInfo","getDatasetInfoList","serverStreaming","methodDescriptor_Dataset_GetImageInfoList","ImageInfo","getImageInfoList","methodDescriptor_Dataset_GetChooseImageInfoList","SelectedDatasetInfo","getChooseImageInfoList","methodDescriptor_Dataset_RemoveImage","SelectedImageInfo","removeImage","methodDescriptor_Dataset_CreateDatasetInfo","NewDatasetInfo","createDatasetInfo","ModelVersionClient","ModelVersionPromiseClient","methodDescriptor_ModelVersion_GetUsingModelVersion","getUsingModelVersion","methodDescriptor_ModelVersion_GetAllModelVersion","getAllModelVersion","methodDescriptor_ModelVersion_Change","change","LoginHeader","props","className","title","Component","SET_USER_INFO","SET_SIDEBAR_SHOW_OR_NOT","SET_TOOL_MODE","SET_RUN_DEMO_MODE","SET_RUN_DEMO_FILE_LIST","SET_RUN_DEMO_CONVERT_FILE_IN_FILE_LIST_TO_FIX_FILE_LIST","SET_RUN_DEMO_REMOVE_FIX_FILE","SET_DATA_COLLECT_DATASET_INFO_LIST","SET_DATA_COLLECT_IMAGE_INFO_LIST","SET_MODEL_VERSION_USING","SET_MODEL_VERSION_ALL","setUserInfo","profile_image","access_token","type","types","LoginMainTitle","text","client_user","UserPromiseClient","env","server_url","login","a","req","response","array","LoginMainForm","sendToServer","bind","event","preventDefault","target","handleSetUserInfo","Cookies","set","history","push","alert","onSubmit","name","LoginMainFormInput","input_component","placeholder","LoginMainFormSubmit","htmlType","style","width","height","fontSize","React","withRouter","LoginMain","connect","state","dispatch","actions","Login","ToolHeader","handleSetSidebarShowOrNot","ToolHeaderSidebarButton","sidebarShowOrNot","background","border","onClick","color","ToolHeaderProfile","src","media_url","user","ToolSidebarItem","changeToolMode","handleSetToolMode","mode","nextProps","nextState","nextContext","ToolSidebar","display","sidebar_show_or_not","sidebar","show_or_not","ToolMainTitle","docs","DropZone","memo","fileInputRef","useRef","useState","selectedFiles","setValidFiles","useEffect","filteredArr","reduce","acc","current","find","item","concat","e","fileDrop","files","dataTransfer","handleFiles","filesSelected","file_list","i","validateFile","blob","Blob","file","handleSetRunDemoFileList","indexOf","size","onDragOver","onDragEnter","onDragLeave","onDrop","click","ref","multiple","onChange","prevProps","ChoiceMode","handleSetRunDemoMode","ChoiceModeItem","changeRunDemoMode","RunDemoCheckResultLineTitle","RunDemoFixDataLineTitle","RunDemoLineTitleItem","client_inference_image","client_user_fix_image","uint8ArrayImage","model_degree","exif_degree","file_name","user_fix_degree","RunDemoCheckResultLineBody","is_file_list_change","tool_mode","get","one_line_component_list","map","file_and_blob","index","uuid_key","uuidv4","handleSetRunDemoConvertFileInFileListToFixFileList","RunDemoCheckResultLineBodyOneLine","url","is_remove_component","setOneLineRemove","fix_file_info","setState","arrayBuffer","Uint8Array","URL","createObjectURL","output_info","confidence_info","String","substr","text_list","RunDemoFixDataLineBody","is_fix_file_list_change","fix_file_list","handleSetRunDemoRemoveFixFile","RunDemoFixDataLineBodyOneLine","setUserRotateDegree","degree","RunDemoLineBodyItemText","texts","temp_text_list","RunDemoLineBodyItemImage","rotate_degree","transform","RunDemoLineBodyItemFixButton","ArrowRightOutlined","RunDemoLineBodyItemRotateButton","onChangeDegree","Number","textContent","RunDemoLineBodyItemSaveButton","CheckResult","FixData","RunDemo","tool","run_demo","is_mode_change","fix_file","client_dataset","handleSetDatasetInfoList","stream","dataset_info_list","on","end","dataset_pk","handleSetDataCollectImageInfoList","setDatasetInfoPk","image_info_list","dataset_info_pk","original_file_name","uuid_file_name","image_info_pk","setImageInfoPk","setTitle","Option","Select","ChoiceDataset","choose_dataset_info_pk","setDataset","getImageInfoListOfChooseDataset","cookies","option_list","dataset_info","textAlign","ChoiceDatasetLoadButton","DataCollectOutputLineTitle","DataCollectOutputLineTitleItem","image_info","DataCollectOutputLineBodyOneLine","sf","DataCollectLineBodyItemText","DataCollectLineBodyItemImage","DataCollectLineBodyItemRemoveButton","ImageInfoOutput","SaveDataset","getLastDatasetPk","submitToSaveDataset","lastPk","forEach","values","handleSetDataCollectDatasetInfoList","onFinish","initialValues","username","justifyContent","alignItems","marginTop","Item","rules","required","marginLeft","DataCollect","data_collect","ModelVersionUsingTitle","ModelVersionAllTitle","ModelVersionOutputTitleItem","client_model_version","version_name","train_acc","test_acc","model_file_name","is_using","handleSetModelVersionAll","model_version_all","changeModelVersion","model_version_pk","console","log","ModelVersionUsingLineBody","model_version_using","ModelVersionUsingLineBodyOneLine","model_file_name1","slice","parseInt","model_file_name2","ModelVersionAllLineBody","fix_or_not","model_version","handleSetModelVersionUsing","ModelVersionAllLineBodyOneLine","changeModelVersionOnClick","using_or_not_component","ModelVersionLineBodyItemText","ModelVersionLineBodyItemChangeButton","ModelVersionUsing","ModelVersionAll","ModelVersion","ToolMain","ToolMiddle","getUserInfoWithToken","authenticateGetUserInfo","Tool","App","exact","component","initialState","reducers","combineReducers","action","filter","store","createStore","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById","getTitle","datasetInfoPk","getDatasetInfoPk","originalFileName","uuidFileName","setOriginalFileName","setUuidFileName","getOriginalFileName","getUuidFileName","imageInfoPk","getImageInfoPk","UserClient","methodDescriptor_User_Login","methodDescriptor_User_Authenticate","authenticate","methodDescriptor_User_AuthenticateGetUserInfo"],"mappings":"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","file":"static/js/main.32b4b506.chunk.js","sourcesContent":["// source: user.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar empty_pb = require('./empty_pb.js');\ngoog.object.extend(proto, empty_pb);\ngoog.exportSymbol('proto.LoginInfo', null, global);\ngoog.exportSymbol('proto.UserInfo', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.UserInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.UserInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.UserInfo.displayName = 'proto.UserInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.LoginInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.LoginInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.LoginInfo.displayName = 'proto.LoginInfo';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.UserInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.UserInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.UserInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.UserInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pk: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    email: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    accessToken: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.UserInfo}\n */\nproto.UserInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.UserInfo;\n  return proto.UserInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.UserInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.UserInfo}\n */\nproto.UserInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPk(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccessToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.UserInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.UserInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.UserInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.UserInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getAccessToken();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 pk = 1;\n * @return {number}\n */\nproto.UserInfo.prototype.getPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.UserInfo} returns this\n */\nproto.UserInfo.prototype.setPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string email = 2;\n * @return {string}\n */\nproto.UserInfo.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.UserInfo} returns this\n */\nproto.UserInfo.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string profile_image = 3;\n * @return {string}\n */\nproto.UserInfo.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.UserInfo} returns this\n */\nproto.UserInfo.prototype.setProfileImage = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string access_token = 4;\n * @return {string}\n */\nproto.UserInfo.prototype.getAccessToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.UserInfo} returns this\n */\nproto.UserInfo.prototype.setAccessToken = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.LoginInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.LoginInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.LoginInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoginInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.LoginInfo}\n */\nproto.LoginInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.LoginInfo;\n  return proto.LoginInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.LoginInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.LoginInfo}\n */\nproto.LoginInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.LoginInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.LoginInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.LoginInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.LoginInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.LoginInfo.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoginInfo} returns this\n */\nproto.LoginInfo.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.LoginInfo.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.LoginInfo} returns this\n */\nproto.LoginInfo.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: inference.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar empty_pb = require('./empty_pb.js');\ngoog.object.extend(proto, empty_pb);\ngoog.exportSymbol('proto.BytesImage', null, global);\ngoog.exportSymbol('proto.InferenceResult', null, global);\ngoog.exportSymbol('proto.ModelPath', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.BytesImage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.BytesImage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.BytesImage.displayName = 'proto.BytesImage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.InferenceResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.InferenceResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.InferenceResult.displayName = 'proto.InferenceResult';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ModelPath = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ModelPath, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ModelPath.displayName = 'proto.ModelPath';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.BytesImage.prototype.toObject = function(opt_includeInstance) {\n  return proto.BytesImage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.BytesImage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BytesImage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    imageContent: msg.getImageContent_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.BytesImage}\n */\nproto.BytesImage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.BytesImage;\n  return proto.BytesImage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.BytesImage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.BytesImage}\n */\nproto.BytesImage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setImageContent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.BytesImage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.BytesImage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.BytesImage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.BytesImage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getImageContent_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes image_content = 1;\n * @return {string}\n */\nproto.BytesImage.prototype.getImageContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes image_content = 1;\n * This is a type-conversion wrapper around `getImageContent()`\n * @return {string}\n */\nproto.BytesImage.prototype.getImageContent_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getImageContent()));\n};\n\n\n/**\n * optional bytes image_content = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImageContent()`\n * @return {!Uint8Array}\n */\nproto.BytesImage.prototype.getImageContent_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getImageContent()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.BytesImage} returns this\n */\nproto.BytesImage.prototype.setImageContent = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.InferenceResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.InferenceResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.InferenceResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.InferenceResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    modelDegree: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    exifDegree: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),\n    success: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.InferenceResult}\n */\nproto.InferenceResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.InferenceResult;\n  return proto.InferenceResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.InferenceResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.InferenceResult}\n */\nproto.InferenceResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setModelDegree(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExifDegree(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setConfidence(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.InferenceResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.InferenceResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.InferenceResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.InferenceResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getModelDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getExifDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getConfidence();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      3,\n      f\n    );\n  }\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 model_degree = 1;\n * @return {number}\n */\nproto.InferenceResult.prototype.getModelDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.InferenceResult} returns this\n */\nproto.InferenceResult.prototype.setModelDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 exif_degree = 2;\n * @return {number}\n */\nproto.InferenceResult.prototype.getExifDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.InferenceResult} returns this\n */\nproto.InferenceResult.prototype.setExifDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional float confidence = 3;\n * @return {number}\n */\nproto.InferenceResult.prototype.getConfidence = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.InferenceResult} returns this\n */\nproto.InferenceResult.prototype.setConfidence = function(value) {\n  return jspb.Message.setProto3FloatField(this, 3, value);\n};\n\n\n/**\n * optional bool success = 4;\n * @return {boolean}\n */\nproto.InferenceResult.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.InferenceResult} returns this\n */\nproto.InferenceResult.prototype.setSuccess = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ModelPath.prototype.toObject = function(opt_includeInstance) {\n  return proto.ModelPath.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ModelPath} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ModelPath.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    path: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ModelPath}\n */\nproto.ModelPath.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ModelPath;\n  return proto.ModelPath.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ModelPath} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ModelPath}\n */\nproto.ModelPath.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPath(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ModelPath.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ModelPath.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ModelPath} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ModelPath.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string path = 1;\n * @return {string}\n */\nproto.ModelPath.prototype.getPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ModelPath} returns this\n */\nproto.ModelPath.prototype.setPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: user_fix_image.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar empty_pb = require('./empty_pb.js');\ngoog.object.extend(proto, empty_pb);\ngoog.exportSymbol('proto.UserFixedImageInfo', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.UserFixedImageInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.UserFixedImageInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.UserFixedImageInfo.displayName = 'proto.UserFixedImageInfo';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.UserFixedImageInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.UserFixedImageInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.UserFixedImageInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.UserFixedImageInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    imageContent: msg.getImageContent_asB64(),\n    fileName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    exifDegree: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    modelDegree: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),\n    userFixDegree: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.UserFixedImageInfo}\n */\nproto.UserFixedImageInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.UserFixedImageInfo;\n  return proto.UserFixedImageInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.UserFixedImageInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.UserFixedImageInfo}\n */\nproto.UserFixedImageInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setImageContent(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFileName(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExifDegree(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setModelDegree(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setConfidence(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUserFixDegree(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.UserFixedImageInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.UserFixedImageInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.UserFixedImageInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.UserFixedImageInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getImageContent_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getExifDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getModelDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getConfidence();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      5,\n      f\n    );\n  }\n  f = message.getUserFixDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes image_content = 1;\n * @return {string}\n */\nproto.UserFixedImageInfo.prototype.getImageContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes image_content = 1;\n * This is a type-conversion wrapper around `getImageContent()`\n * @return {string}\n */\nproto.UserFixedImageInfo.prototype.getImageContent_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getImageContent()));\n};\n\n\n/**\n * optional bytes image_content = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImageContent()`\n * @return {!Uint8Array}\n */\nproto.UserFixedImageInfo.prototype.getImageContent_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getImageContent()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.UserFixedImageInfo} returns this\n */\nproto.UserFixedImageInfo.prototype.setImageContent = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional string file_name = 2;\n * @return {string}\n */\nproto.UserFixedImageInfo.prototype.getFileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.UserFixedImageInfo} returns this\n */\nproto.UserFixedImageInfo.prototype.setFileName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int32 exif_degree = 3;\n * @return {number}\n */\nproto.UserFixedImageInfo.prototype.getExifDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.UserFixedImageInfo} returns this\n */\nproto.UserFixedImageInfo.prototype.setExifDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int32 model_degree = 4;\n * @return {number}\n */\nproto.UserFixedImageInfo.prototype.getModelDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.UserFixedImageInfo} returns this\n */\nproto.UserFixedImageInfo.prototype.setModelDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional float confidence = 5;\n * @return {number}\n */\nproto.UserFixedImageInfo.prototype.getConfidence = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.UserFixedImageInfo} returns this\n */\nproto.UserFixedImageInfo.prototype.setConfidence = function(value) {\n  return jspb.Message.setProto3FloatField(this, 5, value);\n};\n\n\n/**\n * optional int32 user_fix_degree = 6;\n * @return {number}\n */\nproto.UserFixedImageInfo.prototype.getUserFixDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.UserFixedImageInfo} returns this\n */\nproto.UserFixedImageInfo.prototype.setUserFixDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: model_version.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar empty_pb = require('./empty_pb.js');\ngoog.object.extend(proto, empty_pb);\ngoog.exportSymbol('proto.ModelVersionInfo', null, global);\ngoog.exportSymbol('proto.SelectedModelVersion', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SelectedModelVersion = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SelectedModelVersion, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SelectedModelVersion.displayName = 'proto.SelectedModelVersion';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ModelVersionInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ModelVersionInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ModelVersionInfo.displayName = 'proto.ModelVersionInfo';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SelectedModelVersion.prototype.toObject = function(opt_includeInstance) {\n  return proto.SelectedModelVersion.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SelectedModelVersion} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SelectedModelVersion.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pk: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SelectedModelVersion}\n */\nproto.SelectedModelVersion.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SelectedModelVersion;\n  return proto.SelectedModelVersion.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SelectedModelVersion} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SelectedModelVersion}\n */\nproto.SelectedModelVersion.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SelectedModelVersion.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SelectedModelVersion.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SelectedModelVersion} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SelectedModelVersion.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 pk = 1;\n * @return {number}\n */\nproto.SelectedModelVersion.prototype.getPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SelectedModelVersion} returns this\n */\nproto.SelectedModelVersion.prototype.setPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ModelVersionInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ModelVersionInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ModelVersionInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ModelVersionInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pk: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    versionName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    trainAcc: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),\n    testAcc: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),\n    modelFileName: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    isUsing: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ModelVersionInfo}\n */\nproto.ModelVersionInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ModelVersionInfo;\n  return proto.ModelVersionInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ModelVersionInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ModelVersionInfo}\n */\nproto.ModelVersionInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPk(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersionName(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setTrainAcc(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setTestAcc(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setModelFileName(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsUsing(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ModelVersionInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ModelVersionInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ModelVersionInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ModelVersionInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getVersionName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getTrainAcc();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      3,\n      f\n    );\n  }\n  f = message.getTestAcc();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      4,\n      f\n    );\n  }\n  f = message.getModelFileName();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getIsUsing();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 pk = 1;\n * @return {number}\n */\nproto.ModelVersionInfo.prototype.getPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ModelVersionInfo} returns this\n */\nproto.ModelVersionInfo.prototype.setPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string version_name = 2;\n * @return {string}\n */\nproto.ModelVersionInfo.prototype.getVersionName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ModelVersionInfo} returns this\n */\nproto.ModelVersionInfo.prototype.setVersionName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional float train_acc = 3;\n * @return {number}\n */\nproto.ModelVersionInfo.prototype.getTrainAcc = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ModelVersionInfo} returns this\n */\nproto.ModelVersionInfo.prototype.setTrainAcc = function(value) {\n  return jspb.Message.setProto3FloatField(this, 3, value);\n};\n\n\n/**\n * optional float test_acc = 4;\n * @return {number}\n */\nproto.ModelVersionInfo.prototype.getTestAcc = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ModelVersionInfo} returns this\n */\nproto.ModelVersionInfo.prototype.setTestAcc = function(value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n\n\n/**\n * optional string model_file_name = 5;\n * @return {string}\n */\nproto.ModelVersionInfo.prototype.getModelFileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ModelVersionInfo} returns this\n */\nproto.ModelVersionInfo.prototype.setModelFileName = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional bool is_using = 6;\n * @return {boolean}\n */\nproto.ModelVersionInfo.prototype.getIsUsing = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.ModelVersionInfo} returns this\n */\nproto.ModelVersionInfo.prototype.setIsUsing = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 6, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar empty_pb = require('./empty_pb.js')\nconst proto = require('./inference_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.InferenceImageClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.InferenceImagePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.BytesImage,\n *   !proto.InferenceResult>}\n */\nconst methodDescriptor_InferenceImage_Inference = new grpc.web.MethodDescriptor(\n  '/InferenceImage/Inference',\n  grpc.web.MethodType.UNARY,\n  proto.BytesImage,\n  proto.InferenceResult,\n  /**\n   * @param {!proto.BytesImage} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.InferenceResult.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.BytesImage,\n *   !proto.InferenceResult>}\n */\nconst methodInfo_InferenceImage_Inference = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.InferenceResult,\n  /**\n   * @param {!proto.BytesImage} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.InferenceResult.deserializeBinary\n);\n\n\n/**\n * @param {!proto.BytesImage} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.InferenceResult)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.InferenceResult>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.InferenceImageClient.prototype.inference =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/InferenceImage/Inference',\n      request,\n      metadata || {},\n      methodDescriptor_InferenceImage_Inference,\n      callback);\n};\n\n\n/**\n * @param {!proto.BytesImage} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.InferenceResult>}\n *     Promise that resolves to the response\n */\nproto.InferenceImagePromiseClient.prototype.inference =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/InferenceImage/Inference',\n      request,\n      metadata || {},\n      methodDescriptor_InferenceImage_Inference);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.ModelPath,\n *   !proto.Empty>}\n */\nconst methodDescriptor_InferenceImage_LoadModel = new grpc.web.MethodDescriptor(\n  '/InferenceImage/LoadModel',\n  grpc.web.MethodType.UNARY,\n  proto.ModelPath,\n  empty_pb.Empty,\n  /**\n   * @param {!proto.ModelPath} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.ModelPath,\n *   !proto.Empty>}\n */\nconst methodInfo_InferenceImage_LoadModel = new grpc.web.AbstractClientBase.MethodInfo(\n  empty_pb.Empty,\n  /**\n   * @param {!proto.ModelPath} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.ModelPath} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.InferenceImageClient.prototype.loadModel =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/InferenceImage/LoadModel',\n      request,\n      metadata || {},\n      methodDescriptor_InferenceImage_LoadModel,\n      callback);\n};\n\n\n/**\n * @param {!proto.ModelPath} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.InferenceImagePromiseClient.prototype.loadModel =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/InferenceImage/LoadModel',\n      request,\n      metadata || {},\n      methodDescriptor_InferenceImage_LoadModel);\n};\n\n\nmodule.exports = proto;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar empty_pb = require('./empty_pb.js')\nconst proto = require('./user_fix_image_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.UserFixImageClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.UserFixImagePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.UserFixedImageInfo,\n *   !proto.Empty>}\n */\nconst methodDescriptor_UserFixImage_SaveUserFixImage = new grpc.web.MethodDescriptor(\n  '/UserFixImage/SaveUserFixImage',\n  grpc.web.MethodType.UNARY,\n  proto.UserFixedImageInfo,\n  empty_pb.Empty,\n  /**\n   * @param {!proto.UserFixedImageInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.UserFixedImageInfo,\n *   !proto.Empty>}\n */\nconst methodInfo_UserFixImage_SaveUserFixImage = new grpc.web.AbstractClientBase.MethodInfo(\n  empty_pb.Empty,\n  /**\n   * @param {!proto.UserFixedImageInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.UserFixedImageInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.UserFixImageClient.prototype.saveUserFixImage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/UserFixImage/SaveUserFixImage',\n      request,\n      metadata || {},\n      methodDescriptor_UserFixImage_SaveUserFixImage,\n      callback);\n};\n\n\n/**\n * @param {!proto.UserFixedImageInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.UserFixImagePromiseClient.prototype.saveUserFixImage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/UserFixImage/SaveUserFixImage',\n      request,\n      metadata || {},\n      methodDescriptor_UserFixImage_SaveUserFixImage);\n};\n\n\nmodule.exports = proto;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar empty_pb = require('./empty_pb.js')\nconst proto = require('./dataset_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.DatasetClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.DatasetPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.DatasetInfo>}\n */\nconst methodDescriptor_Dataset_GetDatasetInfoList = new grpc.web.MethodDescriptor(\n  '/Dataset/GetDatasetInfoList',\n  grpc.web.MethodType.SERVER_STREAMING,\n  empty_pb.Empty,\n  proto.DatasetInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.DatasetInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Empty,\n *   !proto.DatasetInfo>}\n */\nconst methodInfo_Dataset_GetDatasetInfoList = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.DatasetInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.DatasetInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.DatasetInfo>}\n *     The XHR Node Readable Stream\n */\nproto.DatasetClient.prototype.getDatasetInfoList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/Dataset/GetDatasetInfoList',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_GetDatasetInfoList);\n};\n\n\n/**\n * @param {!proto.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.DatasetInfo>}\n *     The XHR Node Readable Stream\n */\nproto.DatasetPromiseClient.prototype.getDatasetInfoList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/Dataset/GetDatasetInfoList',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_GetDatasetInfoList);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.ImageInfo>}\n */\nconst methodDescriptor_Dataset_GetImageInfoList = new grpc.web.MethodDescriptor(\n  '/Dataset/GetImageInfoList',\n  grpc.web.MethodType.SERVER_STREAMING,\n  empty_pb.Empty,\n  proto.ImageInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ImageInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Empty,\n *   !proto.ImageInfo>}\n */\nconst methodInfo_Dataset_GetImageInfoList = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.ImageInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ImageInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.ImageInfo>}\n *     The XHR Node Readable Stream\n */\nproto.DatasetClient.prototype.getImageInfoList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/Dataset/GetImageInfoList',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_GetImageInfoList);\n};\n\n\n/**\n * @param {!proto.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.ImageInfo>}\n *     The XHR Node Readable Stream\n */\nproto.DatasetPromiseClient.prototype.getImageInfoList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/Dataset/GetImageInfoList',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_GetImageInfoList);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SelectedDatasetInfo,\n *   !proto.ImageInfo>}\n */\nconst methodDescriptor_Dataset_GetChooseImageInfoList = new grpc.web.MethodDescriptor(\n  '/Dataset/GetChooseImageInfoList',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.SelectedDatasetInfo,\n  proto.ImageInfo,\n  /**\n   * @param {!proto.SelectedDatasetInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ImageInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.SelectedDatasetInfo,\n *   !proto.ImageInfo>}\n */\nconst methodInfo_Dataset_GetChooseImageInfoList = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.ImageInfo,\n  /**\n   * @param {!proto.SelectedDatasetInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ImageInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SelectedDatasetInfo} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.ImageInfo>}\n *     The XHR Node Readable Stream\n */\nproto.DatasetClient.prototype.getChooseImageInfoList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/Dataset/GetChooseImageInfoList',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_GetChooseImageInfoList);\n};\n\n\n/**\n * @param {!proto.SelectedDatasetInfo} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.ImageInfo>}\n *     The XHR Node Readable Stream\n */\nproto.DatasetPromiseClient.prototype.getChooseImageInfoList =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/Dataset/GetChooseImageInfoList',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_GetChooseImageInfoList);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SelectedImageInfo,\n *   !proto.Empty>}\n */\nconst methodDescriptor_Dataset_RemoveImage = new grpc.web.MethodDescriptor(\n  '/Dataset/RemoveImage',\n  grpc.web.MethodType.UNARY,\n  proto.SelectedImageInfo,\n  empty_pb.Empty,\n  /**\n   * @param {!proto.SelectedImageInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.SelectedImageInfo,\n *   !proto.Empty>}\n */\nconst methodInfo_Dataset_RemoveImage = new grpc.web.AbstractClientBase.MethodInfo(\n  empty_pb.Empty,\n  /**\n   * @param {!proto.SelectedImageInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SelectedImageInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.DatasetClient.prototype.removeImage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Dataset/RemoveImage',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_RemoveImage,\n      callback);\n};\n\n\n/**\n * @param {!proto.SelectedImageInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.DatasetPromiseClient.prototype.removeImage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Dataset/RemoveImage',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_RemoveImage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.NewDatasetInfo,\n *   !proto.Empty>}\n */\nconst methodDescriptor_Dataset_CreateDatasetInfo = new grpc.web.MethodDescriptor(\n  '/Dataset/CreateDatasetInfo',\n  grpc.web.MethodType.UNARY,\n  proto.NewDatasetInfo,\n  empty_pb.Empty,\n  /**\n   * @param {!proto.NewDatasetInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.NewDatasetInfo,\n *   !proto.Empty>}\n */\nconst methodInfo_Dataset_CreateDatasetInfo = new grpc.web.AbstractClientBase.MethodInfo(\n  empty_pb.Empty,\n  /**\n   * @param {!proto.NewDatasetInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.NewDatasetInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.DatasetClient.prototype.createDatasetInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/Dataset/CreateDatasetInfo',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_CreateDatasetInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.NewDatasetInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.DatasetPromiseClient.prototype.createDatasetInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/Dataset/CreateDatasetInfo',\n      request,\n      metadata || {},\n      methodDescriptor_Dataset_CreateDatasetInfo);\n};\n\n\nmodule.exports = proto;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar empty_pb = require('./empty_pb.js')\nconst proto = require('./model_version_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.ModelVersionClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.ModelVersionPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.ModelVersionInfo>}\n */\nconst methodDescriptor_ModelVersion_GetUsingModelVersion = new grpc.web.MethodDescriptor(\n  '/ModelVersion/GetUsingModelVersion',\n  grpc.web.MethodType.UNARY,\n  empty_pb.Empty,\n  proto.ModelVersionInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ModelVersionInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Empty,\n *   !proto.ModelVersionInfo>}\n */\nconst methodInfo_ModelVersion_GetUsingModelVersion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.ModelVersionInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ModelVersionInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.ModelVersionInfo)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.ModelVersionInfo>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.ModelVersionClient.prototype.getUsingModelVersion =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/ModelVersion/GetUsingModelVersion',\n      request,\n      metadata || {},\n      methodDescriptor_ModelVersion_GetUsingModelVersion,\n      callback);\n};\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.ModelVersionInfo>}\n *     Promise that resolves to the response\n */\nproto.ModelVersionPromiseClient.prototype.getUsingModelVersion =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/ModelVersion/GetUsingModelVersion',\n      request,\n      metadata || {},\n      methodDescriptor_ModelVersion_GetUsingModelVersion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.ModelVersionInfo>}\n */\nconst methodDescriptor_ModelVersion_GetAllModelVersion = new grpc.web.MethodDescriptor(\n  '/ModelVersion/GetAllModelVersion',\n  grpc.web.MethodType.SERVER_STREAMING,\n  empty_pb.Empty,\n  proto.ModelVersionInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ModelVersionInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Empty,\n *   !proto.ModelVersionInfo>}\n */\nconst methodInfo_ModelVersion_GetAllModelVersion = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.ModelVersionInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.ModelVersionInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.ModelVersionInfo>}\n *     The XHR Node Readable Stream\n */\nproto.ModelVersionClient.prototype.getAllModelVersion =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/ModelVersion/GetAllModelVersion',\n      request,\n      metadata || {},\n      methodDescriptor_ModelVersion_GetAllModelVersion);\n};\n\n\n/**\n * @param {!proto.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.ModelVersionInfo>}\n *     The XHR Node Readable Stream\n */\nproto.ModelVersionPromiseClient.prototype.getAllModelVersion =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/ModelVersion/GetAllModelVersion',\n      request,\n      metadata || {},\n      methodDescriptor_ModelVersion_GetAllModelVersion);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.SelectedModelVersion,\n *   !proto.Empty>}\n */\nconst methodDescriptor_ModelVersion_Change = new grpc.web.MethodDescriptor(\n  '/ModelVersion/Change',\n  grpc.web.MethodType.UNARY,\n  proto.SelectedModelVersion,\n  empty_pb.Empty,\n  /**\n   * @param {!proto.SelectedModelVersion} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.SelectedModelVersion,\n *   !proto.Empty>}\n */\nconst methodInfo_ModelVersion_Change = new grpc.web.AbstractClientBase.MethodInfo(\n  empty_pb.Empty,\n  /**\n   * @param {!proto.SelectedModelVersion} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.SelectedModelVersion} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.ModelVersionClient.prototype.change =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/ModelVersion/Change',\n      request,\n      metadata || {},\n      methodDescriptor_ModelVersion_Change,\n      callback);\n};\n\n\n/**\n * @param {!proto.SelectedModelVersion} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.ModelVersionPromiseClient.prototype.change =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/ModelVersion/Change',\n      request,\n      metadata || {},\n      methodDescriptor_ModelVersion_Change);\n};\n\n\nmodule.exports = proto;\n\n","import React, {Component} from \"react\"\n\n\nclass LoginHeader extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className={\"Login-header\"}>\n                {this.props.title}\n            </div>\n        )\n    }\n}\n\nexport default LoginHeader;\n","// --------------- user info ----------------\nexport const SET_USER_INFO = \"SET_USER_INFO\";\n\n// --------------- set sidebar show or not ----------------\nexport const SET_SIDEBAR_SHOW_OR_NOT = \"SET_SIDEBAR_SHOW_OR_NOT\";\n\n// --------------- tool choice ----------------\nexport const SET_TOOL_MODE = \"SET_TOOL_MODE\";\n\n\n// --------------- run demo ----------------\nexport const SET_RUN_DEMO_MODE = \"SET_RUN_DEMO_MODE\";\nexport const SET_RUN_DEMO_FILE_LIST = \"SET_RUN_DEMO_FILE_LIST\";\nexport const SET_RUN_DEMO_CONVERT_FILE_IN_FILE_LIST_TO_FIX_FILE_LIST = \"SET_RUN_DEMO_CONVERT_FILE_IN_FILE_LIST_TO_FIX_FILE_LIST\";\nexport const SET_RUN_DEMO_REMOVE_FIX_FILE = \"SET_RUN_DEMO_REMOVE_FIX_FILE\";\n\n\n// --------------- data collect ----------------\nexport const SET_DATA_COLLECT_DATASET_INFO_LIST = \"SET_DATA_COLLECT_DATASET_INFO_LIST\";\nexport const SET_DATA_COLLECT_IMAGE_INFO_LIST = \"SET_DATA_COLLECT_IMAGE_INFO_LIST\";\n\n\n// --------------- model version ----------------\n// TODO : 이부분부터 내일 생각 시작하기\nexport const SET_MODEL_VERSION_USING = \"SET_MODEL_VERSION_USING\";\nexport const SET_MODEL_VERSION_ALL = \"SET_MODEL_VERSION_ALL\";\n","import * as types from \"./ActionTypes\";\n\n// ------------------------------------------ user info -------------------------------------------\nexport function setUserInfo(pk, email, profile_image, access_token) {\n    return {\n        type: types.SET_USER_INFO,\n        pk,\n        email,\n        profile_image,\n        access_token\n    }\n}\n\n// ------------------------------------------ sidebar show or not -------------------------------------------\nexport function setSidebarShowOrNot() {\n    return {\n        type: types.SET_SIDEBAR_SHOW_OR_NOT\n    }\n}\n\n\n// ------------------------------------------ tool choice -------------------------------------------\nexport function setToolMode(mode) {\n    return {\n        type: types.SET_TOOL_MODE,\n        mode\n    }\n}\n\n// ------------------------------------------ run demo -------------------------------------------\nexport function setRunDemoMode(mode) {\n    return {\n        type: types.SET_RUN_DEMO_MODE,\n        mode\n    }\n}\n\nexport function setRunDemoFileList(file_list) {\n    return {\n        type: types.SET_RUN_DEMO_FILE_LIST,\n        file_list\n    }\n}\n\nexport function setRunDemoConvertFileInFileListToFixFileList(fix_file) {\n    return {\n        type: types.SET_RUN_DEMO_CONVERT_FILE_IN_FILE_LIST_TO_FIX_FILE_LIST,\n        fix_file\n    }\n}\n\nexport function setRunDemoRemoveFixFile(uuid_key) {\n    return {\n        type: types.SET_RUN_DEMO_REMOVE_FIX_FILE,\n        uuid_key\n    }\n}\n\n// ------------------------------------------ data collect -------------------------------------------\nexport function setDataCollectDatasetInfoList(dataset_info_list) {\n    return {\n        type: types.SET_DATA_COLLECT_DATASET_INFO_LIST,\n        dataset_info_list\n    }\n}\n\nexport function setDataCollectImageInfoList(choose_dataset_info_pk, image_info_list) {\n    return {\n        type: types.SET_DATA_COLLECT_IMAGE_INFO_LIST,\n        choose_dataset_info_pk,\n        image_info_list\n    }\n}\n\n// ------------------------------------------ model version -------------------------------------------\nexport function setModelVersionUsing(model_version_using) {\n    return {\n        type: types.SET_MODEL_VERSION_USING,\n        model_version_using\n    }\n}\n\nexport function setModelVersionAll(model_version_all) {\n    return {\n        type: types.SET_MODEL_VERSION_ALL,\n        model_version_all\n    }\n}\n","import React, {Component} from \"react\"\n\n\nclass LoginMainTitle extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"Login-main-title\">\n                    {this.props.text}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginMainTitle;\n","import env from \"react-dotenv\";\nimport {UserPromiseClient} from \"../../../../proto/user_grpc_web_pb\"\n\nexport const client_user = new UserPromiseClient(env.server_url, null, null);\n\n","import {LoginInfo} from \"../../../../proto/user_pb\";\nimport {client_user} from \"./client\";\n\nexport async function login(email, password, metadata = {}) {\n    const req = new LoginInfo();\n    req.setEmail(email);\n    req.setPassword(password);\n    try {\n        const response = await client_user.login(req, metadata);\n        const [pk, email, profile_image, access_token] = response.array;\n        return [pk, email, profile_image, access_token]\n    } catch (err) {\n        return false\n    }\n}","import React, {Component} from \"react\"\nimport {withRouter} from 'react-router-dom';\nimport Cookies from \"universal-cookie\";\n\nimport {Button} from 'antd';\n\nimport {login} from \"./API\"\n\n\nclass LoginMainForm extends Component {\n    constructor(props) {\n        super(props);\n        this.sendToServer = this.sendToServer.bind(this)\n    }\n\n\n    async sendToServer(event) {\n        event.preventDefault();\n        const email = event.target.email.value;\n        const password = event.target.password.value;\n        const metadata = {};\n\n        const response = await login(email, password, metadata);\n\n        if (response) {\n            const [pk, email, profile_image, access_token] = response;\n            this.props.handleSetUserInfo(pk, email, profile_image, access_token);\n            const cookies = new Cookies();\n            cookies.set(\"access_token\", access_token);\n            this.props.history.push(\"/\")\n        } else {\n            alert(\"invalid email or password come\")\n        }\n    }\n\n    render() {\n        return (\n            <form className={\"Login-main-form\"} onSubmit={this.sendToServer}>\n                <LoginMainFormInput title={\"Email\"} name={\"email\"}/>\n                <LoginMainFormInput title={\"Password\"} name={\"password\"}/>\n                <LoginMainFormSubmit/>\n            </form>\n        )\n    }\n}\n\n\nclass LoginMainFormInput extends Component {\n    render() {\n        let input_component = \"\";\n        if (this.props.name === \"password\") {\n            input_component = <input className=\"Login-main-form-input-text_field\"\n                                     type={\"password\"}\n                                     placeholder={this.props.name}\n                                     name={this.props.name}/>\n        } else {\n            input_component = <input className=\"Login-main-form-input-text_field\"\n                                     type={\"text\"}\n                                     placeholder={this.props.name}\n                                     name={this.props.name}/>\n        }\n\n        return (\n            <div className=\"Login-main-form-input\">\n                <div className=\"Login-main-form-input-title\">\n                    {this.props.title}\n                </div>\n                {input_component}\n            </div>\n        )\n    }\n}\n\n\nclass LoginMainFormSubmit extends React.Component {\n    render() {\n        return (\n            <div className={\"Login-main-form-submit\"}>\n                <Button htmlType={\"submit\"} style={{width: \"200px\", height: \"50px\", fontSize: \"24px\"}}> Login</Button>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(LoginMainForm);\n\n\n","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\";\nimport * as actions from \"../../../actions\";\n\nimport LoginMainTitle from \"./LoginMainTitle\";\nimport LoginMainForm from \"./LoginMainForm\";\nimport \"./index.css\"\n\n\nclass LoginMain extends Component {\n    render() {\n        return (\n            <div className={\"Login-main\"}>\n                <LoginMainTitle text={\"ACCOUNT LOGIN\"}/>\n                <LoginMainForm handleSetUserInfo={this.props.handleSetUserInfo}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {}\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetUserInfo: (pk, email, profile_image, access_token) => {\n            dispatch(actions.setUserInfo(pk, email, profile_image, access_token))\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginMain);\n\n","import React, {Component} from \"react\"\nimport \"./index.css\"\n\nimport LoginHeader from \"./LoginHeader\";\nimport LoginMain from \"./LoginMain\";\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className={\"Login\"}>\n                <LoginHeader title={\"Food Image Rotation Admin\"}/>\n                <LoginMain/>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import env from \"react-dotenv\";\nimport React, {Component} from \"react\";\nimport {Button} from \"antd\";\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport MenuOutlined from \"@ant-design/icons/lib/icons/MenuOutlined\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"../../../actions\";\n\nclass ToolHeader extends Component {\n    render() {\n        return (\n            <div className={\"Tool-header\"}>\n                <ToolHeaderSidebarButton handleSetSidebarShowOrNot={this.props.handleSetSidebarShowOrNot}/>\n                <ToolHeaderProfile email={this.props.email} profile_image={this.props.profile_image}/>\n            </div>\n        )\n    }\n}\n\n\nclass ToolHeaderSidebarButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.sidebarShowOrNot = this.sidebarShowOrNot.bind(this)\n    }\n\n    sidebarShowOrNot(event) {\n        event.preventDefault()\n        this.props.handleSetSidebarShowOrNot()\n    }\n\n    render() {\n        return (\n            <Button className=\"Tool-header-sidebar_button\"\n                    style={{width: \"75px\", height: \"75px\", background: \"#434a5e\", border: \"None\"}}\n                    onClick={this.sidebarShowOrNot}>\n\n                <MenuOutlined style={{fontSize: \"40px\", color: \"#FFFFFF\"}}/>\n            </Button>\n        )\n    }\n}\n\nclass ToolHeaderProfile extends React.Component {\n    render() {\n        return (\n            <div className=\"Tool-header-profile\">\n                <img className=\"Tool-header-profile-image\" src={env.media_url + \"/\" + this.props.profile_image}/>\n                <div className=\"Tool-header-profile-text_flex\">\n                    <div className=\"Tool-header-profile-text_flex-text\">\n                        {this.props.email}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        email: state.user.email,\n        profile_image: state.user.profile_image,\n    };\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetSidebarShowOrNot: () => {\n            dispatch(actions.setSidebarShowOrNot())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolHeader);\n\n\n\n\n\n\n\n","import React, {Component} from \"react\"\nimport {Button} from \"antd\";\n\n\nclass ToolSidebarItem extends Component {\n    constructor(props) {\n        super(props);\n        this.changeToolMode = this.changeToolMode.bind(this);\n    }\n\n    changeToolMode() {\n        this.props.handleSetToolMode(this.props.mode)\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <Button style={{width: \"200px\", height: \"75px\", background: \"#434a5e\", border: \"None\", fontSize: \"20px\"}}\n                    className=\"Tool-sidebar-item\"\n                    onClick={this.changeToolMode}\n            >\n                {this.props.text}\n            </Button>\n        )\n    }\n}\n\nexport default ToolSidebarItem\n","import React, {Component} from \"react\"\nimport * as actions from \"../../../../actions\";\nimport {connect} from \"react-redux\";\nimport \"./index.css\"\n\nimport ToolSidebarItem from \"./ToolSidebarItem\";\n\n\nclass ToolSidebar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"Tool-sidebar\" style={{display: this.props.sidebar_show_or_not ? \"block\" : \"none\"}}>\n                <ToolSidebarItem text={\"Run Demo\"}\n                                 mode={\"RunDemo\"}\n                                 handleSetToolMode={this.props.handleSetToolMode} />\n                <ToolSidebarItem text={\"Data Collect\"}\n                                 mode={\"DataCollect\"}\n                                 handleSetToolMode={this.props.handleSetToolMode} />\n                <ToolSidebarItem text={\"Model Version\"}\n                                 mode={\"ModelVersion\"}\n                                 handleSetToolMode={this.props.handleSetToolMode} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sidebar_show_or_not: state.sidebar.show_or_not\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetToolMode: (mode) => {\n            dispatch(actions.setToolMode(mode))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolSidebar);\n\n\n\n","import React, {Component} from \"react\";\n\nexport default class ToolMainTitle extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className=\"Tool-main-title\">\n                {this.props.title}\n                <div className=\"Tool-main-title-docs\">\n                    {this.props.docs}\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {useRef, useState, useEffect} from 'react';\n\nconst DropZone = React.memo((props) => {\n    const fileInputRef = useRef();\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [validFiles, setValidFiles] = useState([]);\n\n\n    useEffect(() => {\n        let filteredArr = selectedFiles.reduce((acc, current) => {\n            const x = acc.find(item => item.name === current.name);\n            if (!x) {\n                return acc.concat([current]);\n            } else {\n                return acc;\n            }\n        }, []);\n        setValidFiles([...filteredArr]);\n\n    }, [selectedFiles]);\n\n    const preventDefault = (e) => {\n        e.preventDefault();\n        // e.stopPropagation();\n    }\n\n    const dragOver = (e) => {\n        preventDefault(e);\n    }\n\n    const dragEnter = (e) => {\n        preventDefault(e);\n    }\n\n    const dragLeave = (e) => {\n        preventDefault(e);\n    }\n\n    const fileDrop = async (e) => {\n        preventDefault(e);\n        const files = e.dataTransfer.files;\n        if (files.length) {\n            await handleFiles(files);\n        }\n    }\n\n    const filesSelected = async () => {\n        if (fileInputRef.current.files.length) {\n            await handleFiles(fileInputRef.current.files);\n        }\n    }\n\n    const fileInputClicked = () => {\n        fileInputRef.current.click();\n    }\n\n    const handleFiles = async (files) => {\n        const file_list = [];\n        for (let i = 0; i < files.length; i++) {\n            if (validateFile(files[i])) {\n                let blob = new Blob([files[i]]);\n                file_list.push({file: files[i], blob: blob});\n            }\n        }\n        props.handleSetRunDemoFileList(file_list)\n    }\n\n    const validateFile = (file) => {\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n        if (validTypes.indexOf(file.type) === -1) {\n            return false;\n        }\n        const mb = 1024 * 1024\n        if (file.size > 10 * mb) {\n            return false\n        }\n        return true;\n    }\n\n    return (\n        <div className={\"Tool-main-run_demo-dropzone-flex\"}>\n            <div className=\"Tool-main-run_demo-dropzone\">\n                <div className=\"Tool-main-run_demo-dropzone-container\"\n                     onDragOver={dragOver}\n                     onDragEnter={dragEnter}\n                     onDragLeave={dragLeave}\n                     onDrop={fileDrop}\n                     onClick={fileInputClicked}\n                >\n                    <div className=\"Tool-main-run_demo-dropzone-container-message\">\n                        Drag & Drop files here or click to select file(s)\n                    </div>\n                    <input\n                        ref={fileInputRef}\n                        className=\"Tool-main-run_demo-dropzone-container-file_input\"\n                        type=\"file\"\n                        multiple\n                        onChange={filesSelected}\n                    />\n                </div>\n            </div>\n\n\n        </div>\n    );\n}, (prevProps, nextProps) => {\n    return true;\n});\n\nexport default DropZone;\n\n\n","import React, {Component} from \"react\";\nimport {Button} from \"antd\";\n\nclass ChoiceMode extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-choice_mode-container\"}>\n                <div className={\"Tool-main-run_demo-choice_mode\"}>\n                    <ChoiceModeItem text={\"Check Result\"} mode={\"CheckResult\"}\n                                    handleSetRunDemoMode={this.props.handleSetRunDemoMode}/>\n                    <ChoiceModeItem text={\"Fix Data\"} mode={\"FixData\"}\n                                    handleSetRunDemoMode={this.props.handleSetRunDemoMode}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass ChoiceModeItem extends Component {\n    constructor(props) {\n        super(props);\n        this.changeRunDemoMode = this.changeRunDemoMode.bind(this);\n    }\n\n    changeRunDemoMode(event) {\n        event.preventDefault();\n        this.props.handleSetRunDemoMode(this.props.mode);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button\n                    style={{width: \"600px\", height: \"75px\", fontSize: \"25px\"}}\n                    className=\"Tool-main-run_demo-choice_mode-item\"\n                    onClick={this.changeRunDemoMode}\n                >\n                    {this.props.text}\n                </Button>\n\n            </div>\n        )\n    }\n}\n\n\nexport default ChoiceMode;\n\n\n","import React, {Component} from \"react\";\n\n\nexport class RunDemoCheckResultLineTitle extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-output-line-title\"}>\n                <RunDemoLineTitleItem text={\"File Name\"}/>\n                <RunDemoLineTitleItem text={\"Input Image\"}/>\n                <RunDemoLineTitleItem text={\"Output Image\"}/>\n                <RunDemoLineTitleItem text={\"Output Info\"}/>\n                <RunDemoLineTitleItem text={\"Confidence\"}/>\n                <RunDemoLineTitleItem text={\"Fix Data\"}/>\n            </div>\n        );\n    }\n}\n\nexport class RunDemoFixDataLineTitle extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-output-line-title\"}>\n                <RunDemoLineTitleItem text={\"File Name\"}/>\n                <RunDemoLineTitleItem text={\"Input Image\"}/>\n                <RunDemoLineTitleItem text={\"Output Image\"}/>\n                <RunDemoLineTitleItem text={\"Output Info\"}/>\n                <RunDemoLineTitleItem text={\"Rotate Degree\"}/>\n                <RunDemoLineTitleItem text={\"Save\"}/>\n            </div>\n        );\n    }\n}\n\n\nclass RunDemoLineTitleItem extends Component {\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-output-line-title-item\"}>\n                {this.props.text}\n            </div>\n        );\n    }\n}\n\n\n\n\n","import env from \"react-dotenv\";\nimport {InferenceImagePromiseClient} from \"../../../../../../proto/inference_grpc_web_pb\"\nimport {UserFixImagePromiseClient} from \"../../../../../../proto/user_fix_image_grpc_web_pb\"\n\nexport const client_inference_image = new InferenceImagePromiseClient(env.server_url, null, null);\nexport const client_user_fix_image = new UserFixImagePromiseClient(env.server_url, null, null);\n","import {BytesImage} from \"../../../../../../proto/inference_pb\";\nimport {UserFixedImageInfo} from \"../../../../../../proto/user_fix_image_pb\";\nimport {client_inference_image, client_user_fix_image} from \"./client\";\n\nexport async function inference(uint8ArrayImage, metadata = {\"access_token\": \"\"}) {\n    const req = new BytesImage();\n    req.setImageContent(uint8ArrayImage);\n    try {\n        const response = await client_inference_image.inference(req, metadata);\n        let [model_degree, exif_degree, confidence, success] = response.array;\n\n        if ((typeof model_degree) === \"undefined\") {\n            model_degree = 0\n        }\n        if ((typeof exif_degree) === \"undefined\") {\n            exif_degree = 0\n        }\n        if ((typeof confidence) === \"undefined\") {\n            confidence = 0\n        }\n        if ((typeof success) === \"undefined\") {\n            success = true\n        }\n\n        return [model_degree, exif_degree, confidence, success];\n    } catch (err) {\n        return false;\n    }\n}\n\nexport async function saveUserFixImage(uint8ArrayImage, file_name, exif_degree, model_degree, confidence, user_fix_degree, metadata = {\"access_token\": \"\"}) {\n    const req = new UserFixedImageInfo();\n    req.setImageContent(uint8ArrayImage);\n    req.setFileName(file_name);\n    req.setExifDegree(exif_degree);\n    req.setModelDegree(model_degree);\n    req.setConfidence(confidence);\n    req.setUserFixDegree(user_fix_degree);\n\n    try {\n        await client_user_fix_image.saveUserFixImage(req, metadata);\n        return true;\n    } catch (err) {\n        return false;\n    }\n\n\n}\n\n","import React, {Component} from \"react\";\nimport {v4 as uuidv4} from 'uuid';\nimport Cookies from \"universal-cookie\";\n\nimport {ArrowRightOutlined} from \"@ant-design/icons\"\nimport {Button} from \"antd\";\nimport {inference, saveUserFixImage} from \"../API\";\nimport CheckOutlined from \"@ant-design/icons/lib/icons/CheckOutlined\";\n\nexport class RunDemoCheckResultLineBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextProps.is_file_list_change) {\n            if (nextProps.tool_mode === \"RunDemo\") {\n                return this.props.tool_mode === nextProps.tool_mode;\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n\n        const one_line_component_list = this.props.file_list.map((file_and_blob, index) => {\n            const uuid_key = uuidv4();\n            return <RunDemoCheckResultLineBodyOneLine key={uuid_key}\n                                                      uuid_key={uuid_key}\n                                                      file_and_blob={file_and_blob}\n                                                      access_token={access_token}\n                                                      handleSetRunDemoConvertFileInFileListToFixFileList={this.props.handleSetRunDemoConvertFileInFileListToFixFileList}\n            />;\n        })\n\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body\"}>\n                {one_line_component_list}\n            </div>\n        )\n    }\n}\n\nclass RunDemoCheckResultLineBodyOneLine extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file_name: \"\",\n            url: \"\",\n            exif_degree: 0,\n            model_degree: 0,\n            confidence: 0,\n\n            is_remove_component: false\n        };\n        this.setOneLineRemove = this.setOneLineRemove.bind(this);\n    }\n\n    setOneLineRemove() {\n        const fix_file_info = {\n            file: this.props.file_and_blob.file,\n            blob: this.props.file_and_blob.blob,\n            file_name: this.state.file_name,\n            url: this.state.url,\n            exif_degree: this.state.exif_degree,\n            model_degree: this.state.model_degree,\n            confidence: this.state.confidence,\n            uuid_key: this.props.uuid_key\n        }\n\n        this.props.handleSetRunDemoConvertFileInFileListToFixFileList(fix_file_info)\n        this.setState({is_remove_component: true})\n    }\n\n\n    async componentDidMount() {\n        const blob = this.props.file_and_blob.blob;\n\n\n        const arrayBuffer = await blob.arrayBuffer();\n        const uint8ArrayImage = new Uint8Array(arrayBuffer);\n        const metadata = {\"access_token\": this.props.access_token}\n        const response = await inference(uint8ArrayImage, metadata);\n        if (response) {\n            const [model_degree, exif_degree, confidence, success] = response;\n            const url = URL.createObjectURL(blob);\n            const file = this.props.file_and_blob.file;\n            const file_name = file.name;\n            this.setState({\n                file_name,\n                url,\n                exif_degree,\n                model_degree,\n                confidence\n            })\n        } else {\n            this.setState({is_remove_component: true});\n        }\n    }\n\n    render() {\n        const file_name = [this.state.file_name];\n        const output_info = [\n            \"Exif Degree : \" + this.state.exif_degree,\n            \"Model Degree : \" + this.state.model_degree,\n        ]\n        const confidence_info = [\n            \"confidence : \" + String(this.state.confidence).substr(0, 5)\n        ]\n\n\n        return (\n            this.state.is_remove_component ? null :\n                <div className={\"Tool-main-run_demo-output-line-body-one_line\"}>\n                    <RunDemoLineBodyItemText text_list={file_name}/>\n                    <RunDemoLineBodyItemImage url={this.state.url} model_degree={0} user_fix_degree={0}/>\n                    <RunDemoLineBodyItemImage url={this.state.url}\n                                              model_degree={this.state.model_degree}\n                                              user_fix_degree={0}\n                    />\n                    <RunDemoLineBodyItemText text_list={output_info}/>\n                    <RunDemoLineBodyItemText text_list={confidence_info}/>\n                    <RunDemoLineBodyItemFixButton\n                        setOneLineRemove={this.setOneLineRemove}\n                    />\n                </div>\n        )\n    }\n}\n\n// ------------------------------------ RunDemoFixDataLineBody -----------------------------------------\nexport class RunDemoFixDataLineBody extends Component {\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextProps.is_fix_file_list_change) {\n            if (nextProps.tool_mode === \"RunDemo\") {\n                return this.props.tool_mode === nextProps.tool_mode;\n            }\n        }\n        return false;\n    }\n\n    render() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n\n        const one_line_component_list = this.props.fix_file_list.map((fix_file_info, index) => {\n            return <RunDemoFixDataLineBodyOneLine key={fix_file_info.uuid_key}\n                                                  uuid_key={fix_file_info.uuid_key}\n                                                  fix_file_info={fix_file_info}\n                                                  access_token={access_token}\n                                                  handleSetRunDemoRemoveFixFile={this.props.handleSetRunDemoRemoveFixFile}\n            />;\n        })\n\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body\"}>\n                {one_line_component_list}\n            </div>\n        )\n    }\n}\n\nclass RunDemoFixDataLineBodyOneLine extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file_name: \"\",\n            url: \"\",\n            exif_degree: 0,\n            model_degree: 0,\n            confidence: 0,\n\n            user_fix_degree: 0,\n\n            is_remove_component: false\n        };\n\n        this.setUserRotateDegree = this.setUserRotateDegree.bind(this);\n        this.setOneLineRemove = this.setOneLineRemove.bind(this);\n    }\n\n    setUserRotateDegree(degree) {\n        this.setState({user_fix_degree: degree})\n    }\n\n    async setOneLineRemove() {\n        const blob = this.state.blob;\n        const arrayBuffer = await blob.arrayBuffer();\n        const uint8ArrayImage = new Uint8Array(arrayBuffer);\n        const metadata = {\"access_token\": this.props.access_token};\n        const file_name = this.state.file_name;\n        const exif_degree = this.state.exif_degree;\n        const model_degree = this.state.model_degree;\n        const confidence = this.state.confidence;\n        const user_fix_degree = this.state.user_fix_degree;\n\n        await saveUserFixImage(uint8ArrayImage, file_name, exif_degree, model_degree, confidence, user_fix_degree, metadata)\n\n        this.props.handleSetRunDemoRemoveFixFile(this.props.uuid_key)\n        this.setState({is_remove_component: true});\n    }\n\n    componentDidMount() {\n        const blob = this.props.fix_file_info.blob;\n        const file_name = this.props.fix_file_info.file_name;\n        const url = this.props.fix_file_info.url;\n        const exif_degree = this.props.fix_file_info.exif_degree;\n        const model_degree = this.props.fix_file_info.model_degree;\n        const confidence = this.props.fix_file_info.confidence;\n        this.setState({\n            blob: blob,\n            file_name: file_name,\n            url: url,\n            exif_degree: exif_degree,\n            model_degree: model_degree,\n            confidence: confidence\n        })\n    }\n\n    render() {\n        const file_name = [this.state.file_name];\n        const output_info = [\n            \"Exif Degree : \" + this.state.exif_degree,\n            \"Model Degree : \" + this.state.model_degree,\n            \"confidence : \" + String(this.state.confidence).substr(0, 4),\n            \"User Degree : \" + this.state.user_fix_degree\n        ]\n\n        return (\n            this.state.is_remove_component ? null :\n                <div className={\"Tool-main-run_demo-output-line-body-one_line\"}>\n                    <RunDemoLineBodyItemText text_list={file_name}/>\n                    <RunDemoLineBodyItemImage url={this.state.url}\n                                              model_degree={0}\n                                              user_fix_degree={0}\n                    />\n                    <RunDemoLineBodyItemImage url={this.state.url}\n                                              model_degree={this.state.model_degree}\n                                              user_fix_degree={this.state.user_fix_degree}\n                    />\n                    <RunDemoLineBodyItemText text_list={output_info}/>\n                    <RunDemoLineBodyItemRotateButton setUserRotateDegree={this.setUserRotateDegree}/>\n                    <RunDemoLineBodyItemSaveButton setOneLineRemove={this.setOneLineRemove}/>\n                </div>\n        )\n    }\n}\n\n// ------------------------------------ Item -----------------------------------------\n\nclass RunDemoLineBodyItemText extends Component {\n    render() {\n        let texts = [];\n        let temp_text_list = this.props.text_list\n        for (let i = 0; i < temp_text_list.length; i++) {\n            texts.push(<div key={i}>{temp_text_list[i]}</div>)\n        }\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body-item\"}>\n                <div className={\"Tool-main-run_demo-output-line-body-item-text\"}>\n                    {texts}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass RunDemoLineBodyItemImage extends Component {\n    render() {\n        const rotate_degree = (-1 * this.props.model_degree) + (-1 * this.props.user_fix_degree);\n\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body-item\"}>\n                <img className=\"Tool-main-run_demo-output-line-body-item-image\"\n                     style={{transform: `rotate(${rotate_degree}deg)`}}\n                     src={this.props.url}/>\n            </div>\n        )\n    }\n}\n\n\nclass RunDemoLineBodyItemFixButton extends React.Component {\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body-item\"}>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-run_demo-output-line-body-item-fix_button\"\n                        onClick={this.props.setOneLineRemove}\n                >\n                    <ArrowRightOutlined style={{fontSize: \"40px\"}}/>\n                </Button>\n            </div>\n        );\n    }\n}\n\n\nclass RunDemoLineBodyItemRotateButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeDegree = this.onChangeDegree.bind(this);\n    }\n\n    onChangeDegree(event) {\n        event.preventDefault();\n        this.props.setUserRotateDegree(Number(event.target.textContent));\n    }\n\n\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body-item-rotate\"}>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-run_demo-output-line-body-item-rotate-button\"\n                        onClick={this.onChangeDegree}\n                >\n                    0\n                </Button>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-run_demo-output-line-body-item-rotate-button\"\n                        onClick={this.onChangeDegree}\n                >\n                    90\n                </Button>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-run_demo-output-line-body-item-rotate-button\"\n                        onClick={this.onChangeDegree}\n                >\n                    270\n                </Button>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-run_demo-output-line-body-item-rotate-button\"\n                        onClick={this.onChangeDegree}\n                >\n                    180\n                </Button>\n            </div>\n        );\n    }\n}\n\n\nclass RunDemoLineBodyItemSaveButton extends React.Component {\n    render() {\n        return (\n            <div className={\"Tool-main-run_demo-output-line-body-item\"}>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-run_demo-output-line-body-item-save_button\"\n                        onClick={this.props.setOneLineRemove}\n                >\n                    <CheckOutlined style={{fontSize: \"40px\"}}/>\n                </Button>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n","import React, {Component} from \"react\";\nimport {RunDemoCheckResultLineTitle} from \"./Line/LineTitle\";\nimport {RunDemoCheckResultLineBody} from \"./Line/LineBody\";\n\nclass CheckResult extends Component {\n    render() {\n        const show_or_not = this.props.mode === \"CheckResult\";\n\n        return (\n            <div className={\"Tool-main-run_demo-output\"} style={{display: show_or_not ? \"block\" : \"none\"}}>\n                <RunDemoCheckResultLineTitle/>\n                <RunDemoCheckResultLineBody\n                    tool_mode={this.props.tool_mode}\n                    file_list={this.props.file_list}\n                    is_file_list_change={this.props.is_file_list_change}\n                    handleSetRunDemoConvertFileInFileListToFixFileList={this.props.handleSetRunDemoConvertFileInFileListToFixFileList}\n                />\n            </div>\n        )\n    }\n}\n\nexport default CheckResult;\n","import React, {Component} from \"react\";\nimport {RunDemoFixDataLineTitle} from \"./Line/LineTitle\";\nimport {RunDemoFixDataLineBody} from \"./Line/LineBody\";\n\nclass FixData extends Component {\n    render() {\n        const show_or_not = this.props.mode === \"FixData\";\n\n        return (\n            <div className={\"Tool-main-run_demo-output\"} style={{display: show_or_not ? \"block\" : \"none\"}}>\n                <RunDemoFixDataLineTitle/>\n                <RunDemoFixDataLineBody\n                    tool_mode={this.props.tool_mode}\n                    fix_file_list={this.props.fix_file_list}\n                    is_fix_file_list_change={this.props.is_fix_file_list_change}\n                    handleSetRunDemoRemoveFixFile={this.props.handleSetRunDemoRemoveFixFile}\n                />\n            </div>\n        )\n    }\n}\n\nexport default FixData;\n","import React, {Component} from \"react\";\nimport ToolMainTitle from \"../ToolMainTitle\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"../../../../../actions\";\n\nimport \"./index.css\"\n\nimport DropZone from \"./DropZone\";\nimport ChoiceMode from \"./ChoiceMode\";\nimport CheckResult from \"./CheckResult\";\nimport FixData from \"./FixData\";\n\nclass RunDemo extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        const show_or_not = this.props.tool_mode === \"RunDemo\";\n\n        return (\n            <div className={\"Tool-main-run_demo\"} style={{display: show_or_not ? \"block\" : \"none\"}}>\n                <ToolMainTitle title={\"Food Image Rotation Detector[API]\"}\n                               docs={\"음식 이미지들을 올리고, EXIF DATA Degree 와 model 의 Rotation Degree 를 고려한 회전된 이미지가 나옵니다. \"}/>\n                <DropZone handleSetRunDemoFileList={this.props.handleSetRunDemoFileList}/>\n\n                <ChoiceMode handleSetRunDemoMode={this.props.handleSetRunDemoMode}/>\n\n                <CheckResult tool_mode={this.props.tool_mode}\n                             mode={this.props.mode}\n                             file_list={this.props.file_list}\n                             is_file_list_change={this.props.is_file_list_change}\n                             handleSetRunDemoConvertFileInFileListToFixFileList={this.props.handleSetRunDemoConvertFileInFileListToFixFileList}\n                />\n\n                <FixData tool_mode={this.props.tool_mode}\n                         mode={this.props.mode}\n                         fix_file_list={this.props.fix_file_list}\n                         is_fix_file_list_change={this.props.is_fix_file_list_change}\n                         handleSetRunDemoRemoveFixFile={this.props.handleSetRunDemoRemoveFixFile}\n                />\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tool_mode: state.tool.mode,\n        mode: state.run_demo.mode,\n        file_list: state.run_demo.file_list,\n        fix_file_list: state.run_demo.fix_file_list,\n        is_mode_change: state.run_demo.is_mode_change,\n        is_file_list_change: state.run_demo.is_file_list_change,\n        is_fix_file_list_change: state.run_demo.is_fix_file_list_change\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetRunDemoFileList: (file_list) => {\n            dispatch(actions.setRunDemoFileList(file_list))\n        },\n        handleSetRunDemoMode: (mode) => {\n            dispatch(actions.setRunDemoMode(mode))\n        },\n        handleSetRunDemoConvertFileInFileListToFixFileList: (fix_file) => {\n            dispatch(actions.setRunDemoConvertFileInFileListToFixFileList(fix_file))\n        },\n        handleSetRunDemoRemoveFixFile: (fix_file) => {\n            dispatch(actions.setRunDemoRemoveFixFile(fix_file))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RunDemo);\n\n","import env from \"react-dotenv\";\nimport {DatasetPromiseClient} from \"../../../../../../proto/dataset_grpc_web_pb\"\n\nexport const client_dataset = new DatasetPromiseClient(env.server_url, null, null);\n\n","import {Empty} from \"../../../../../../proto/empty_pb\";\nimport {SelectedDatasetInfo, SelectedImageInfo, NewDatasetInfo} from \"../../../../../../proto/dataset_pb\"\nimport {client_dataset} from \"./client\";\n\n\nexport async function getDatasetInfoList(metadata = {\"access_token\": \"\"}, handleSetDatasetInfoList) {\n    const req = new Empty();\n    try {\n        const stream = await client_dataset.getDatasetInfoList(req, metadata);\n        const dataset_info_list = []\n        stream.on(\"data\", function (response) {\n            let [pk, title] = response.array\n            dataset_info_list.push({pk, title})\n        })\n        stream.on(\"end\", function (end) {\n            handleSetDatasetInfoList(dataset_info_list)\n        });\n\n    } catch (err) {\n        return false\n    }\n}\n\nexport async function getChooseImageInfoList(dataset_pk = 0, metadata = {\"access_token\": \"\"}, handleSetDataCollectImageInfoList) {\n    const req = new SelectedDatasetInfo();\n    req.setDatasetInfoPk(dataset_pk)\n    try {\n        const stream = await client_dataset.getChooseImageInfoList(req, metadata);\n        const image_info_list = []\n        stream.on(\"data\", function (response) {\n            let [pk, dataset_info_pk, original_file_name, uuid_file_name, exif_degree, model_degree, confidence, user_fix_degree] = response.array\n\n            if ((typeof pk) === \"undefined\") {\n                pk = 0\n            }\n            if ((typeof dataset_info_pk) === \"undefined\") {\n                dataset_info_pk = 0\n            }\n            if ((typeof original_file_name) === \"undefined\") {\n                original_file_name = \"none.jpg\"\n            }\n            if ((typeof uuid_file_name) === \"undefined\") {\n                uuid_file_name = \"random.jpg\"\n            }\n            if ((typeof exif_degree) === \"undefined\") {\n                exif_degree = 0\n            }\n            if ((typeof model_degree) === \"undefined\") {\n                model_degree = 0\n            }\n            if ((typeof confidence) === \"undefined\") {\n                confidence = 0\n            }\n            if ((typeof user_fix_degree) === \"undefined\") {\n                user_fix_degree = 0\n            }\n\n            image_info_list.push({\n                pk,\n                dataset_info_pk,\n                original_file_name,\n                uuid_file_name,\n                exif_degree,\n                model_degree,\n                confidence,\n                user_fix_degree\n            })\n        })\n        stream.on(\"end\", function (end) {\n            handleSetDataCollectImageInfoList(dataset_pk, image_info_list)\n        });\n\n    } catch (err) {\n        return false\n    }\n}\n\n\nexport async function removeImage(image_info_pk = 0, metadata = {\"access_token\": \"\"}) {\n    const req = new SelectedImageInfo();\n    req.setImageInfoPk(image_info_pk)\n    try {\n        await client_dataset.removeImage(req, metadata);\n        return true;\n    } catch (err) {\n        return false\n    }\n}\n\nexport async function createDatasetInfo(title, metadata = {\"access_token\": \"\"}) {\n    const req = new NewDatasetInfo();\n    req.setTitle(title);\n    try {\n        await client_dataset.createDatasetInfo(req, metadata);\n        return true;\n    } catch (err) {\n        return false;\n    }\n\n}\n\n\n\n","import {getChooseImageInfoList, getDatasetInfoList} from \"./API\";\nimport React, {Component} from \"react\";\nimport Cookies from \"universal-cookie\";\nimport {Button, Select} from \"antd\";\n\n\nconst {Option} = Select;\n\n\nclass ChoiceDataset extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return this.props.dataset_info_list.length !== nextProps.dataset_info_list.length;\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            choose_dataset_info_pk: 0,\n        }\n        this.setDataset = this.setDataset.bind(this);\n        this.getImageInfoListOfChooseDataset = this.getImageInfoListOfChooseDataset.bind(this);\n    }\n\n    setDataset(value) {\n        this.setState({choose_dataset_info_pk: value});\n    }\n\n    async getImageInfoListOfChooseDataset(event) {\n        event.preventDefault();\n        const choose_dataset_info_pk = this.state.choose_dataset_info_pk;\n        if (choose_dataset_info_pk !== 0) {\n            const cookies = new Cookies();\n            const access_token = cookies.get(\"access_token\");\n            const metadata = {\"access_token\": access_token};\n            await getChooseImageInfoList(choose_dataset_info_pk, metadata, this.props.handleSetDataCollectImageInfoList)\n        }\n    }\n\n\n\n    render() {\n        const dataset_info_list = this.props.dataset_info_list;\n        const option_list = dataset_info_list.map((dataset_info, index) => {\n            return <Option key={index} value={dataset_info.pk}\n                           style={{width: \"500px\", height: \"50px\", textAlign: \"center\", fontSize: \"20px\"}}>\n                {dataset_info.title}\n            </Option>\n        })\n\n        return (\n            <form className={\"Tool-main-data_collect-choice_dataset\"} onSubmit={this.getImageInfoListOfChooseDataset}>\n\n                <Select style={{width: \"500px\", textAlign: \"center\", fontSize: \"20px\"}}\n                        onChange={this.setDataset}\n                >\n                    {option_list}\n                </Select>\n                <ChoiceDatasetLoadButton text={\"Load Dataset\"}\n                                         getImageInfoListOfChooseDataset={this.getImageInfoListOfChooseDataset}/>\n\n            </form>\n        )\n    }\n}\n\n\nclass ChoiceDatasetLoadButton extends Component {\n    render() {\n        return (\n            <div className={\"Tool-main-data_collect-choice_dataset-load_button\"}>\n                <Button\n                    type={\"submit\"}\n                    style={{width: \"300px\"}}\n                    className=\"Tool-main-run_demo-choice_mode-item\"\n                    onClick={this.props.getImageInfoListOfChooseDataset}\n                >\n                    {this.props.text}\n                </Button>\n            </div>\n        )\n    }\n\n}\n\n\nexport default ChoiceDataset;\n","import React, {Component} from \"react\";\n\n\nexport class DataCollectOutputLineTitle extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-data_collect-output-line-title\"}>\n                <DataCollectOutputLineTitleItem text={\"Original File Name\"}/>\n                <DataCollectOutputLineTitleItem text={\"UUID File Name\"}/>\n                <DataCollectOutputLineTitleItem text={\"Output Info\"}/>\n                <DataCollectOutputLineTitleItem text={\"Image\"}/>\n                <DataCollectOutputLineTitleItem text={\"Remove\"}/>\n            </div>\n        );\n    }\n}\n\n\nclass DataCollectOutputLineTitleItem extends Component {\n    render() {\n        return (\n            <div className={\"Tool-main-data_collect-output-line-title-item\"}>\n                {this.props.text}\n            </div>\n        );\n    }\n}\n\n\n\n\n","import env from \"react-dotenv\";\nimport React, {Component} from \"react\";\nimport {Button} from \"antd\";\nimport {v4 as uuidv4} from \"uuid\";\nimport Cookies from \"universal-cookie\";\n\nimport sf from \"sf\";\nimport {removeImage} from \"../API\";\nimport CloseOutlined from \"@ant-design/icons/lib/icons/CloseOutlined\";\n\nexport class RunDemoCheckResultLineBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n\n        const one_line_component_list = this.props.image_info_list.map((image_info, index) => {\n            const uuid_key = uuidv4();\n            return <DataCollectOutputLineBodyOneLine key={uuid_key}\n                                                     image_info={image_info}\n                                                     access_token={access_token}\n            />;\n        })\n\n        return (\n            <div className={\"Tool-main-data_collect-output-line-body\"}>\n                {one_line_component_list}\n            </div>\n        )\n    }\n}\n\n\nclass DataCollectOutputLineBodyOneLine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_remove_component: false\n        };\n        this.setOneLineRemove = this.setOneLineRemove.bind(this);\n    }\n\n    async setOneLineRemove() {\n        const access_token = this.props.access_token;\n        const metadata = {\"access_token\": access_token}\n        await removeImage(this.props.image_info.pk, metadata)\n        this.setState({is_remove_component: true})\n    }\n\n    render() {\n        const original_file_name = [this.props.image_info.original_file_name];\n        const uuid_file_name = [this.props.image_info.uuid_file_name];\n        const output_info = [\n            \"Exif Degree : \" + this.props.image_info.exif_degree,\n            \"Model Degree : \" + this.props.image_info.model_degree,\n            \"confidence : \" + String(this.props.image_info.confidence).substr(0, 5),\n            \"User Degree : \" + this.props.image_info.user_fix_degree,\n        ]\n\n\n        const url = sf(\"{media_url}/{dataset_info_pk}/{uuid_file_name}\",\n            {\n                media_url: env.media_url,\n                dataset_info_pk: this.props.image_info.dataset_info_pk,\n                uuid_file_name: this.props.image_info.uuid_file_name\n            })\n\n\n        return (\n            this.state.is_remove_component ? null :\n                <div className={\"Tool-main-data_collect-output-line-body-one_line\"}>\n                    <DataCollectLineBodyItemText text_list={original_file_name}/>\n                    <DataCollectLineBodyItemText text_list={uuid_file_name}/>\n                    <DataCollectLineBodyItemText text_list={output_info}/>\n                    <DataCollectLineBodyItemImage url={url}\n                                                  model_degree={this.props.image_info.model_degree}\n                                                  user_fix_degree={this.props.image_info.user_fix_degree}\n                    />\n                    <DataCollectLineBodyItemRemoveButton setOneLineRemove={this.setOneLineRemove}/>\n                </div>\n        )\n    }\n\n\n}\n\n// ------------------------------------ Item -----------------------------------------\nclass DataCollectLineBodyItemText extends Component {\n    render() {\n        let texts = [];\n        let temp_text_list = this.props.text_list\n        for (let i = 0; i < temp_text_list.length; i++) {\n            texts.push(<div key={i}>{temp_text_list[i]}</div>)\n        }\n        return (\n            <div className={\"Tool-main-data_collect-output-line-body-item\"}>\n                <div className={\"Tool-main-data_collect-output-line-body-item-text\"}>\n                    {texts}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass DataCollectLineBodyItemImage extends Component {\n    render() {\n        const rotate_degree = (-1 * this.props.model_degree) + (-1 * this.props.user_fix_degree);\n\n        return (\n            <div className={\"Tool-main-data_collect-output-line-body-item\"}>\n                <img className=\"Tool-main-data_collect-output-line-body-item-image\"\n                     style={{transform: `rotate(${rotate_degree}deg)`}}\n                     src={this.props.url}\n                />\n            </div>\n        )\n    }\n}\n\n\nclass DataCollectLineBodyItemRemoveButton extends React.Component {\n    render() {\n        return (\n            <div className={\"Tool-main-data_collect-output-line-body-item\"}>\n                <Button style={{width: \"100px\", height: \"100px\"}}\n                        className=\"Tool-main-data_collect-output-line-body-item-fix_button\"\n                        onClick={this.props.setOneLineRemove}\n                >\n                    <CloseOutlined style={{fontSize: \"40px\"}}/>\n                </Button>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {DataCollectOutputLineTitle} from \"./Line/LineTitle\";\nimport {RunDemoCheckResultLineBody} from \"./Line/LineBody\";\n\nclass ImageInfoOutput extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (this.props.tool_mode === \"DataCollect\") {\n            if (this.props.tool_mode === nextProps.tool_mode) {\n                return this.props.choose_dataset_info_pk !== nextProps.choose_dataset_info_pk\n            }\n        }\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-data_collect-output\"}>\n                <DataCollectOutputLineTitle/>\n                <RunDemoCheckResultLineBody choose_dataset_info_pk={this.props.choose_dataset_info_pk}\n                                            image_info_list={this.props.image_info_list}/>\n            </div>\n        )\n    }\n}\n\nexport default ImageInfoOutput;","import React, {Component} from \"react\";\nimport {Form, Input, Button, Checkbox} from 'antd';\nimport {createDatasetInfo, getDatasetInfoList} from \"./API\";\nimport Cookies from \"universal-cookie\";\n\n\nclass SaveDataset extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getLastDatasetPk = this.getLastDatasetPk.bind(this);\n        this.submitToSaveDataset = this.submitToSaveDataset.bind(this);\n    }\n\n    getLastDatasetPk(dataset_info_list) {\n        let lastPk = -1\n        dataset_info_list.forEach(function (item, index) {\n            if (item.pk > lastPk) {\n                lastPk = item.pk\n            }\n        });\n        return lastPk\n    }\n\n    async submitToSaveDataset(values) {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n        const metadata = {\"access_token\": access_token};\n        await createDatasetInfo(values.title, metadata);\n        await getDatasetInfoList(metadata, this.props.handleSetDataCollectDatasetInfoList);\n        this.props.handleSetDataCollectImageInfoList(0, [])\n    }\n\n    render() {\n        const is_remove_component = this.props.choose_dataset_info_pk !== this.getLastDatasetPk(this.props.dataset_info_list)\n\n        return (\n            is_remove_component ? null :\n                <Form\n                    name=\"basic\"\n                    onFinish={this.submitToSaveDataset}\n                    initialValues={{username: \"John Doe\"}}\n                    style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginTop: \"30px\"}}\n                >\n                    <Form.Item\n                        name=\"title\" style={{width: \"500px\"}}\n                        rules={[{required: true, message: 'Please input your username!'}]}\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginLeft: \"10px\"}}>\n                            Save Dataset\n                        </Button>\n                    </Form.Item>\n                </Form>\n        );\n\n    }\n}\n\nexport default SaveDataset;\n","import React, {Component} from \"react\";\nimport ToolMainTitle from \"../ToolMainTitle\";\nimport {connect} from \"react-redux\";\nimport ChoiceDataset from \"./ChoiceDataset\";\n\nimport \"./index.css\";\nimport * as actions from \"../../../../../actions\";\nimport ImageInfoOutput from \"./ImageInfoOutput\";\nimport SaveDataset from \"./SaveDataset\";\nimport Cookies from \"universal-cookie\";\nimport {getDatasetInfoList} from \"./API\";\n\n\nclass DataCollect extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n        const metadata = {\"access_token\": access_token};\n        await getDatasetInfoList(metadata, this.props.handleSetDataCollectDatasetInfoList);\n    }\n\n    render() {\n        const show_or_not = this.props.tool_mode === \"DataCollect\";\n        return (\n            <div className={\"Tool-main-data_collect\"} style={{display: show_or_not ? \"block\" : \"none\"}}>\n                <ToolMainTitle title={\"DATA Collection of Food Image Rotation\"}\n                               docs={\"food Image Rotation AI 의 Demo 를 통해서 얻은 부족한 경우들을 모아, 학습을 위한 데이터 로 사용됩니다.\"}/>\n\n                <ChoiceDataset\n                    dataset_info_list={this.props.dataset_info_list}\n                    handleSetDataCollectDatasetInfoList={this.props.handleSetDataCollectDatasetInfoList}\n                    handleSetDataCollectImageInfoList={this.props.handleSetDataCollectImageInfoList}\n                />\n\n                <ImageInfoOutput tool_mode={this.props.tool_mode}\n                                 choose_dataset_info_pk={this.props.choose_dataset_info_pk}\n                                 image_info_list={this.props.image_info_list}/>\n\n                <SaveDataset choose_dataset_info_pk={this.props.choose_dataset_info_pk}\n                             dataset_info_list={this.props.dataset_info_list}\n                             handleSetDataCollectDatasetInfoList={this.props.handleSetDataCollectDatasetInfoList}\n                             handleSetDataCollectImageInfoList={this.props.handleSetDataCollectImageInfoList}\n                />\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tool_mode: state.tool.mode,\n        choose_dataset_info_pk: state.data_collect.choose_dataset_info_pk,\n        dataset_info_list: state.data_collect.dataset_info_list,\n        image_info_list: state.data_collect.image_info_list\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetDataCollectDatasetInfoList: (dataset_info_list) => {\n            dispatch(actions.setDataCollectDatasetInfoList(dataset_info_list))\n        },\n\n        handleSetDataCollectImageInfoList: (dataset_info_pk, image_info_list) => {\n            dispatch(actions.setDataCollectImageInfoList(dataset_info_pk, image_info_list))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DataCollect);\n\n","import React, {Component} from \"react\";\n\n\n\n\n\nexport class ModelVersionUsingTitle extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-output-title\"}>\n                <ModelVersionOutputTitleItem text={\"Model Version\"}/>\n                <ModelVersionOutputTitleItem text={\"Train Accuracy\"}/>\n                <ModelVersionOutputTitleItem text={\"Train Accuracy\"}/>\n                <ModelVersionOutputTitleItem text={\"File Name\"}/>\n                <ModelVersionOutputTitleItem text={\"Using\"}/>\n            </div>\n        );\n    }\n}\n\n\nexport class ModelVersionAllTitle extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return false;\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-output-title\"}>\n                <ModelVersionOutputTitleItem text={\"Model Version\"}/>\n                <ModelVersionOutputTitleItem text={\"Train Accuracy\"}/>\n                <ModelVersionOutputTitleItem text={\"Train Accuracy\"}/>\n                <ModelVersionOutputTitleItem text={\"File Name\"}/>\n                <ModelVersionOutputTitleItem text={\"Change Model\"}/>\n            </div>\n        );\n    }\n}\n\n\n\n\n\nclass ModelVersionOutputTitleItem extends Component {\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-output-line-title-item\"}>\n                {this.props.text}\n            </div>\n        );\n    }\n}","import env from \"react-dotenv\";\nimport {ModelVersionPromiseClient} from \"../../../../../../proto/model_version_grpc_web_pb\"\n\nexport const client_model_version = new ModelVersionPromiseClient(env.server_url, null, null);\n\n","import {Empty} from \"../../../../../../proto/empty_pb\";\nimport {SelectedModelVersion} from \"../../../../../../proto/model_version_pb\";\nimport {client_model_version} from \"./client\";\n\n\nexport async function getUsingModelVersion(metadata) {\n    const req = new Empty();\n    try {\n        const response = await client_model_version.getUsingModelVersion(req, metadata);\n        const [pk, version_name, train_acc, test_acc, model_file_name, is_using] = response.array;\n        return [pk, version_name, train_acc, test_acc, model_file_name, is_using];\n\n    } catch (err) {\n        return false;\n    }\n}\n\n\nexport async function getAllModelVersion(metadata, handleSetModelVersionAll) {\n    const req = new Empty();\n    try {\n        const stream = await client_model_version.getAllModelVersion(req, metadata);\n        const model_version_all = []\n        stream.on(\"data\", function (response) {\n            let [pk, version_name, train_acc, test_acc, model_file_name, is_using] = response.array\n            model_version_all.push({pk, version_name, train_acc, test_acc, model_file_name, is_using})\n        })\n        stream.on(\"end\", function (end) {\n            handleSetModelVersionAll(model_version_all)\n        });\n    } catch (err) {\n        return false\n    }\n}\n\nexport async function changeModelVersion(model_version_pk, metadata) {\n    const req = new SelectedModelVersion();\n    req.setPk(model_version_pk);\n    try {\n         await client_model_version.change(req, metadata);\n         return true;\n    } catch (err) {\n        console.log(\"err : \", err)\n        return false;\n    }\n}\n","import React, {Component} from \"react\";\nimport Cookies from \"universal-cookie\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {Button} from \"antd\";\n\nimport CheckOutlined from \"@ant-design/icons/lib/icons/CheckOutlined\";\nimport {changeModelVersion, getAllModelVersion, getUsingModelVersion} from \"../API\";\n\n\nexport class ModelVersionUsingLineBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return this.props.model_version_using.pk !== nextProps.model_version_using.pk\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-output-line-body\"}>\n                <ModelVersionUsingLineBodyOneLine model_version_using={this.props.model_version_using}/>\n            </div>\n        )\n    }\n}\n\n\nclass ModelVersionUsingLineBodyOneLine extends Component {\n    render() {\n        let version_name = this.props.model_version_using.version_name\n        let train_acc = this.props.model_version_using.train_acc\n        let test_acc = this.props.model_version_using.test_acc\n        let model_file_name = this.props.model_version_using.model_file_name\n\n        train_acc = String(train_acc).substr(0, 5)\n        test_acc = String(test_acc).substr(0, 5)\n\n        let model_file_name1 = model_file_name.slice(0, parseInt(model_file_name.length / 2))\n        let model_file_name2 = model_file_name.slice(parseInt(model_file_name.length / 2),)\n\n\n        return (\n            <div className={\"Tool-main-model_version-output-line-body-one_line\"}>\n                <ModelVersionLineBodyItemText text_list={[version_name]}/>\n                <ModelVersionLineBodyItemText text_list={[train_acc]}/>\n                <ModelVersionLineBodyItemText text_list={[test_acc]}/>\n                <ModelVersionLineBodyItemText text_list={[model_file_name1, model_file_name2]}/>\n                <ModelVersionLineBodyItemText text_list={[\"사용중인 모델입니다.\"]}/>\n            </div>\n        )\n    }\n}\n\n// ------------------------------------ AllLineBody -----------------------------------------\n\nexport class ModelVersionAllLineBody extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n\n        if (this.props.model_version_all.length === 0 && nextProps.model_version_all.length !== 0) {\n            return true;\n        }\n\n        let fix_or_not = false;\n        this.props.model_version_all.forEach(function (model_version, index) {\n            if (model_version.is_using) {\n                fix_or_not = !nextProps.model_version_all[index].is_using\n            }\n        });\n        return fix_or_not;\n    }\n\n    render() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n\n        const one_line_component_list = this.props.model_version_all.map((model_version, index) => {\n            const uuid_key = uuidv4();\n            return <ModelVersionAllLineBodyOneLine key={uuid_key}\n                                                   model_version={model_version}\n                                                   access_token={access_token}\n                                                   handleSetModelVersionUsing={this.props.handleSetModelVersionUsing}\n                                                   handleSetModelVersionAll={this.props.handleSetModelVersionAll}\n            />;\n        })\n\n        return (\n            <div className={\"Tool-main-model_version-output-line-body\"}>\n                {one_line_component_list}\n            </div>\n        )\n    }\n}\n\nclass ModelVersionAllLineBodyOneLine extends Component {\n    constructor(props) {\n        super(props);\n        this.changeModelVersionOnClick = this.changeModelVersionOnClick.bind(this);\n    }\n\n    async changeModelVersionOnClick() {\n        let model_version_pk = this.props.model_version.pk;\n        let access_token = this.props.access_token;\n        const metadata = {\"access_token\": access_token}\n\n        await changeModelVersion(model_version_pk, metadata);\n        const response = await getUsingModelVersion(metadata);\n        if (response) {\n            const [pk, version_name, train_acc, test_acc, model_file_name, is_using] = response;\n            this.props.handleSetModelVersionUsing(\n                {\n                    \"pk\": pk,\n                    \"version_name\": version_name,\n                    \"train_acc\": train_acc,\n                    \"test_acc\": test_acc,\n                    \"model_file_name\": model_file_name,\n                    \"is_using\": is_using\n                }\n            )\n        }\n        await getAllModelVersion(metadata, this.props.handleSetModelVersionAll);\n    }\n\n\n    render() {\n        let version_name = this.props.model_version.version_name;\n        let train_acc = this.props.model_version.train_acc;\n        let test_acc = this.props.model_version.test_acc;\n        let model_file_name = this.props.model_version.model_file_name;\n        let is_using = this.props.model_version.is_using;\n\n        train_acc = String(train_acc).substr(0, 5);\n        test_acc = String(test_acc).substr(0, 5);\n\n        let model_file_name1 = model_file_name.slice(0, parseInt(model_file_name.length / 2));\n        let model_file_name2 = model_file_name.slice(parseInt(model_file_name.length / 2),);\n\n        let using_or_not_component = null;\n        if (is_using) {\n            using_or_not_component = <ModelVersionLineBodyItemText text_list={[\"사용중인 모델입니다.\"]}/>\n        } else {\n            using_or_not_component =\n                <ModelVersionLineBodyItemChangeButton changeModelVersionOnClick={this.changeModelVersionOnClick}/>\n        }\n\n        return (\n            <div className={\"Tool-main-model_version-output-line-body-one_line\"}>\n                <ModelVersionLineBodyItemText text_list={[version_name]}/>\n                <ModelVersionLineBodyItemText text_list={[train_acc]}/>\n                <ModelVersionLineBodyItemText text_list={[test_acc]}/>\n                <ModelVersionLineBodyItemText text_list={[model_file_name1, model_file_name2]}/>\n                {using_or_not_component}\n\n            </div>\n        )\n    }\n}\n\n\n// ------------------------------------ Item -----------------------------------------\n\n\nclass ModelVersionLineBodyItemText extends Component {\n    render() {\n        let texts = [];\n        let temp_text_list = this.props.text_list\n        for (let i = 0; i < temp_text_list.length; i++) {\n            texts.push(<div key={i}>{temp_text_list[i]}</div>)\n        }\n        return (\n            <div className={\"Tool-main-model_version-output-line-body-item\"}>\n                <div className={\"Tool-main-model_version-output-line-body-item-text\"}>\n                    {texts}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass ModelVersionLineBodyItemChangeButton extends React.Component {\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-output-line-body-item\"}>\n                <Button style={{width: \"100px\", height: \"40px\"}}\n                        className=\"Tool-main-model_version-output-line-body-item-change_button\"\n                        onClick={this.props.changeModelVersionOnClick}\n                >\n                    <CheckOutlined style={{fontSize: \"20px\"}}/>\n\n                </Button>\n            </div>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {ModelVersionUsingTitle} from \"./Line/LineTitle\";\nimport {ModelVersionUsingLineBody} from \"./Line/LineBody\";\n\nclass ModelVersionUsing extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-using\"}>\n\n                <div className={\"Tool-main-model_version-output-header\"}>\n                    현재 사용중인 모델\n                </div>\n                <ModelVersionUsingTitle/>\n                <ModelVersionUsingLineBody model_version_using={this.props.model_version_using}/>\n            </div>\n        )\n    }\n}\n\nexport default ModelVersionUsing;","import React, {Component} from \"react\";\nimport {ModelVersionAllTitle} from \"./Line/LineTitle\";\nimport {ModelVersionAllLineBody} from \"./Line/LineBody\";\n\nclass ModelVersionAll extends Component {\n    render() {\n        return (\n            <div className={\"Tool-main-model_version-all\"}>\n                <div className={\"Tool-main-model_version-output-header\"}>\n                    전체 모델\n                </div>\n                <ModelVersionAllTitle/>\n                <ModelVersionAllLineBody model_version_all={this.props.model_version_all}\n                                         handleSetModelVersionUsing={this.props.handleSetModelVersionUsing}\n                                         handleSetModelVersionAll={this.props.handleSetModelVersionAll}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ModelVersionAll;","import React, {Component} from \"react\";\nimport \"./index.css\"\n\nimport ToolMainTitle from \"../ToolMainTitle\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"../../../../../actions\";\nimport ModelVersionUsing from \"./ModelVersionUsing\";\nimport ModelVersionAll from \"./ModelVersionAll\";\nimport Cookies from \"universal-cookie\";\nimport {getAllModelVersion, getUsingModelVersion} from \"./API\";\n\n\nclass ModelVersion extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    async componentDidMount() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n        const metadata = {\"access_token\": access_token};\n        const response = await getUsingModelVersion(metadata);\n        if (response) {\n            const [pk, version_name, train_acc, test_acc, model_file_name, is_using] = response;\n            this.props.handleSetModelVersionUsing(\n                {\n                    \"pk\": pk,\n                    \"version_name\": version_name,\n                    \"train_acc\": train_acc,\n                    \"test_acc\": test_acc,\n                    \"model_file_name\": model_file_name,\n                    \"is_using\": is_using\n                }\n            )\n        }\n        await getAllModelVersion(metadata, this.props.handleSetModelVersionAll);\n    }\n\n    render() {\n        const show_or_not = this.props.tool_mode === \"ModelVersion\";\n        return (\n            <div className={\"Tool-main-model_version\"} style={{display: show_or_not ? \"block\" : \"none\"}}>\n                <ToolMainTitle title={\"Model Version of Food Image Rotation Detector(API)\"}\n                               docs={\"Model Version 에 대한 목록\"}/>\n\n                <ModelVersionUsing model_version_using={this.props.model_version_using}/>\n                <ModelVersionAll model_version_all={this.props.model_version_all}\n                                 handleSetModelVersionUsing={this.props.handleSetModelVersionUsing}\n                                 handleSetModelVersionAll={this.props.handleSetModelVersionAll}\n                />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tool_mode: state.tool.mode,\n        model_version_using: state.model_version.model_version_using,\n        model_version_all: state.model_version.model_version_all\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetModelVersionUsing: (model_version_using) => {\n            dispatch(actions.setModelVersionUsing(model_version_using))\n        },\n\n        handleSetModelVersionAll: (model_version_all) => {\n            dispatch(actions.setModelVersionAll(model_version_all))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModelVersion);\n\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./index.css\"\n\nimport RunDemo from \"./RunDemo\";\nimport DataCollect from \"./DataCollect\";\nimport ModelVersion from \"./ModelVersion\";\n\n\nclass ToolMain extends Component {\n    render() {\n        return (\n            <div className={\"Tool-main\"}>\n                <RunDemo/>\n                <DataCollect/>\n                <ModelVersion/>\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {}\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolMain);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport \"./index.css\"\n\nimport ToolSidebar from \"./ToolSidebar\";\nimport ToolMain from \"./ToolMain\";\n\nclass ToolMiddle extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className={\"Tool-middle\"}>\n                <ToolSidebar />\n                <ToolMain/>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {}\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolMiddle);\n\n","import env from \"react-dotenv\";\nimport {UserPromiseClient} from \"../../../proto/user_grpc_web_pb\"\n\nexport const client_user = new UserPromiseClient(env.server_url, null, null);\n\n","import {Empty} from \"../../../proto/empty_pb\";\nimport {client_user} from \"./client\";\n\nexport async function getUserInfoWithToken(metadata = {\"access_token\": \"\"}) {\n    const req = new Empty();\n    try {\n        const response = await client_user.authenticateGetUserInfo(req, metadata);\n        const [pk, email, profile_image, access_token] = response.array;\n        return [pk, email, profile_image, access_token];\n    } catch (err) {\n        return false;\n    }\n}\n","// TODO : ToolHeader 부분이제 구현하면 된다.\nimport React, {Component} from \"react\"\nimport Cookies from \"universal-cookie\";\nimport {withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nimport \"./index.css\"\nimport ToolHeader from \"./ToolHeader\";\nimport ToolMiddle from \"./ToolMiddle\";\n\nimport * as actions from \"../../actions\";\nimport {getUserInfoWithToken} from \"./API\";\n\n\nclass Tool extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        const cookies = new Cookies();\n        const access_token = cookies.get(\"access_token\");\n        if (access_token) {\n            const metadata = {access_token};\n            const response = await getUserInfoWithToken(metadata);\n            if (response) {\n                const [pk, email, profile_image, access_token] = response;\n                this.props.handleSetUserInfo(pk, email, profile_image, access_token);\n            } else {\n                this.props.history.push(\"/login\")\n            }\n        } else {\n            this.props.history.push(\"/login\")\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"Tool\"}>\n                <ToolHeader/>\n                <ToolMiddle/>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {};\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleSetUserInfo: (pk, email, profile_image, access_token) => {\n            dispatch(actions.setUserInfo(pk, email, profile_image, access_token))\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Tool));\n\n\n","import React, {Component} from \"react\";\nimport {Link, Route, BrowserRouter as Router} from \"react-router-dom\"\nimport './App.css';\n\n\nimport Login from \"./pages/Login\"\nimport Tool from \"./pages/Tool\"\n\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className={\"App\"}>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/\" component={Tool}/>\n                </div>\n            </Router>\n        )\n    }\n}\n\n\nexport default App;\n","import * as types from \"../actions/ActionTypes\"\n\nconst initialState = {\n    pk: 0,\n    email: \"\",\n    profile_image: \"\",\n    access_token: \"\"\n}\n\nexport default function user(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_USER_INFO:\n            return {\n                pk: action.pk,\n                email: action.email,\n                profile_image: action.profile_image,\n                access_token: action.access_token\n            }\n        default:\n            return state\n    }\n}\n","import * as types from \"../actions/ActionTypes\"\n\nconst initialState = {\n    show_or_not: true\n}\n\nexport default function sidebar(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_SIDEBAR_SHOW_OR_NOT:\n            return {\n                show_or_not: !state.show_or_not\n            }\n        default:\n            return state\n    }\n}\n","import * as types from \"../actions/ActionTypes\"\n\nconst initialState = {\n    mode: \"RunDemo\",  // RunDemo, DataCollect, ModelVersion\n}\n\nexport default function tool(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_TOOL_MODE:\n            return {\n                mode: action.mode\n            }\n        default:\n            return state\n    }\n}\n","import * as types from \"../actions/ActionTypes\"\n\nconst initialState = {\n    mode: \"CheckResult\",  // CheckResult, FixData\n    file_list: [],\n    fix_file_list: [],\n    is_mode_change: false,\n    is_file_list_change: false,\n    is_fix_file_list_change: false,\n}\n\nexport default function run_demo(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_RUN_DEMO_MODE:\n            return {\n                ...state,\n                mode: action.mode,\n                is_mode_change: true,\n                is_file_list_change: false,\n                is_fix_file_list_change: false\n            }\n\n        case types.SET_RUN_DEMO_FILE_LIST:\n            return {\n                ...state,\n                file_list: action.file_list,\n                is_mode_change: false,\n                is_file_list_change: true,\n                is_fix_file_list_change: false\n            }\n\n        case types.SET_RUN_DEMO_CONVERT_FILE_IN_FILE_LIST_TO_FIX_FILE_LIST:\n            return {\n                ...state,\n                fix_file_list: state.fix_file_list.concat([action.fix_file]),\n                is_mode_change: false,\n                is_file_list_change: false,\n                is_fix_file_list_change: true\n            }\n\n        case types.SET_RUN_DEMO_REMOVE_FIX_FILE:\n            const fix_file_list = state.fix_file_list.filter((item) => {\n                return item.uuid_key !== action.uuid_key\n            })\n\n            return {\n                ...state,\n                fix_file_list: fix_file_list,\n                is_mode_change: false,\n                is_file_list_change: false,\n                is_fix_file_list_change: false\n            }\n\n\n        default:\n            return state\n    }\n}\n","import * as types from \"../actions/ActionTypes\";\n\n\nconst initialState = {\n    choose_dataset_info_pk: 0,\n    dataset_info_list: [],\n    image_info_list: []\n};\n\nexport default function data_collect(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_DATA_COLLECT_DATASET_INFO_LIST:\n            return {\n                ...state,\n                dataset_info_list: action.dataset_info_list\n            }\n        case types.SET_DATA_COLLECT_IMAGE_INFO_LIST:\n            return {\n                ...state,\n                choose_dataset_info_pk: action.choose_dataset_info_pk,\n                image_info_list: action.image_info_list\n            }\n        default:\n            return state\n    }\n}\n\n","import * as types from \"../actions/ActionTypes\"\n\nconst initialState = {\n    model_version_using: {\n        pk: 0,\n        version_name: \"\",\n        train_acc: 0,\n        test_acc: 0,\n        model_file_name: \"\",\n        is_using: true\n    },\n    model_version_all: []\n}\n\nexport default function model_version(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_MODEL_VERSION_USING:\n            return {\n                ...state,\n                model_version_using: action.model_version_using\n            }\n        case types.SET_MODEL_VERSION_ALL:\n            return {\n                ...state,\n                model_version_all: action.model_version_all\n            }\n        default:\n            return state\n    }\n\n}\n\n\n","// reducer => 변화를 일으킬 수 있는 함수\nimport {combineReducers} from \"redux\";\nimport user from \"./user\";\nimport sidebar from \"./sidebar\";\nimport tool from \"./tool\";\nimport run_demo from \"./run_demo\";\nimport data_collect from \"./data_collect\"\nimport model_version from \"./model_version\"\n\nconst reducers = combineReducers({\n    user, sidebar, tool, run_demo, data_collect, model_version\n});\n\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport {createStore} from \"redux\";\nimport reducers from \"./reducers\";\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(reducers);\n// console.log(store.getState());\nconst unsubscribe = store.subscribe(() => console.log(store.getState()));\n\n\nReactDOM.render(\n    <React.StrictMode>\n\n        <Provider store={store}>\n            <App/>\n        </Provider>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n","// source: empty.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.Empty', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.Empty.displayName = 'proto.Empty';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.Empty;\n  return proto.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.Empty}\n */\nproto.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto);\n","// source: dataset.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar empty_pb = require('./empty_pb.js');\ngoog.object.extend(proto, empty_pb);\ngoog.exportSymbol('proto.DatasetInfo', null, global);\ngoog.exportSymbol('proto.ImageInfo', null, global);\ngoog.exportSymbol('proto.NewDatasetInfo', null, global);\ngoog.exportSymbol('proto.SelectedDatasetInfo', null, global);\ngoog.exportSymbol('proto.SelectedImageInfo', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.DatasetInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.DatasetInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.DatasetInfo.displayName = 'proto.DatasetInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SelectedDatasetInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SelectedDatasetInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SelectedDatasetInfo.displayName = 'proto.SelectedDatasetInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.NewDatasetInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.NewDatasetInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.NewDatasetInfo.displayName = 'proto.NewDatasetInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.ImageInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.ImageInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.ImageInfo.displayName = 'proto.ImageInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.SelectedImageInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.SelectedImageInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.SelectedImageInfo.displayName = 'proto.SelectedImageInfo';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.DatasetInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.DatasetInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.DatasetInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DatasetInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pk: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    title: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.DatasetInfo}\n */\nproto.DatasetInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.DatasetInfo;\n  return proto.DatasetInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.DatasetInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.DatasetInfo}\n */\nproto.DatasetInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPk(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.DatasetInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.DatasetInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.DatasetInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.DatasetInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 pk = 1;\n * @return {number}\n */\nproto.DatasetInfo.prototype.getPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.DatasetInfo} returns this\n */\nproto.DatasetInfo.prototype.setPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string title = 2;\n * @return {string}\n */\nproto.DatasetInfo.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.DatasetInfo} returns this\n */\nproto.DatasetInfo.prototype.setTitle = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SelectedDatasetInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.SelectedDatasetInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SelectedDatasetInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SelectedDatasetInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    datasetInfoPk: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SelectedDatasetInfo}\n */\nproto.SelectedDatasetInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SelectedDatasetInfo;\n  return proto.SelectedDatasetInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SelectedDatasetInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SelectedDatasetInfo}\n */\nproto.SelectedDatasetInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setDatasetInfoPk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SelectedDatasetInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SelectedDatasetInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SelectedDatasetInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SelectedDatasetInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDatasetInfoPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 dataset_info_pk = 1;\n * @return {number}\n */\nproto.SelectedDatasetInfo.prototype.getDatasetInfoPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SelectedDatasetInfo} returns this\n */\nproto.SelectedDatasetInfo.prototype.setDatasetInfoPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.NewDatasetInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.NewDatasetInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.NewDatasetInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.NewDatasetInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    title: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.NewDatasetInfo}\n */\nproto.NewDatasetInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.NewDatasetInfo;\n  return proto.NewDatasetInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.NewDatasetInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.NewDatasetInfo}\n */\nproto.NewDatasetInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.NewDatasetInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.NewDatasetInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.NewDatasetInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.NewDatasetInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string title = 1;\n * @return {string}\n */\nproto.NewDatasetInfo.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.NewDatasetInfo} returns this\n */\nproto.NewDatasetInfo.prototype.setTitle = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.ImageInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.ImageInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.ImageInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ImageInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pk: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    datasetInfoPk: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    originalFileName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    uuidFileName: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    exifDegree: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    modelDegree: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),\n    userFixDegree: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.ImageInfo}\n */\nproto.ImageInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.ImageInfo;\n  return proto.ImageInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.ImageInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.ImageInfo}\n */\nproto.ImageInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPk(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setDatasetInfoPk(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOriginalFileName(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUuidFileName(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExifDegree(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setModelDegree(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setConfidence(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUserFixDegree(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.ImageInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.ImageInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.ImageInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.ImageInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getDatasetInfoPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getOriginalFileName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getUuidFileName();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getExifDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getModelDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getConfidence();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      7,\n      f\n    );\n  }\n  f = message.getUserFixDegree();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 pk = 1;\n * @return {number}\n */\nproto.ImageInfo.prototype.getPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int32 dataset_info_pk = 2;\n * @return {number}\n */\nproto.ImageInfo.prototype.getDatasetInfoPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setDatasetInfoPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional string original_file_name = 3;\n * @return {string}\n */\nproto.ImageInfo.prototype.getOriginalFileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setOriginalFileName = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string uuid_file_name = 4;\n * @return {string}\n */\nproto.ImageInfo.prototype.getUuidFileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setUuidFileName = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int32 exif_degree = 5;\n * @return {number}\n */\nproto.ImageInfo.prototype.getExifDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setExifDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int32 model_degree = 6;\n * @return {number}\n */\nproto.ImageInfo.prototype.getModelDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setModelDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional float confidence = 7;\n * @return {number}\n */\nproto.ImageInfo.prototype.getConfidence = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setConfidence = function(value) {\n  return jspb.Message.setProto3FloatField(this, 7, value);\n};\n\n\n/**\n * optional int32 user_fix_degree = 8;\n * @return {number}\n */\nproto.ImageInfo.prototype.getUserFixDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.ImageInfo} returns this\n */\nproto.ImageInfo.prototype.setUserFixDegree = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.SelectedImageInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.SelectedImageInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.SelectedImageInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SelectedImageInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    imageInfoPk: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.SelectedImageInfo}\n */\nproto.SelectedImageInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.SelectedImageInfo;\n  return proto.SelectedImageInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.SelectedImageInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.SelectedImageInfo}\n */\nproto.SelectedImageInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setImageInfoPk(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.SelectedImageInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.SelectedImageInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.SelectedImageInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.SelectedImageInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getImageInfoPk();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 image_info_pk = 1;\n * @return {number}\n */\nproto.SelectedImageInfo.prototype.getImageInfoPk = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.SelectedImageInfo} returns this\n */\nproto.SelectedImageInfo.prototype.setImageInfoPk = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto);\n","/**\n * @fileoverview gRPC-Web generated client stub for \n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar empty_pb = require('./empty_pb.js')\nconst proto = require('./user_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.UserClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.UserPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.LoginInfo,\n *   !proto.UserInfo>}\n */\nconst methodDescriptor_User_Login = new grpc.web.MethodDescriptor(\n  '/User/Login',\n  grpc.web.MethodType.UNARY,\n  proto.LoginInfo,\n  proto.UserInfo,\n  /**\n   * @param {!proto.LoginInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.UserInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.LoginInfo,\n *   !proto.UserInfo>}\n */\nconst methodInfo_User_Login = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.UserInfo,\n  /**\n   * @param {!proto.LoginInfo} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.UserInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.LoginInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.UserInfo)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.UserInfo>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.UserClient.prototype.login =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/User/Login',\n      request,\n      metadata || {},\n      methodDescriptor_User_Login,\n      callback);\n};\n\n\n/**\n * @param {!proto.LoginInfo} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.UserInfo>}\n *     Promise that resolves to the response\n */\nproto.UserPromiseClient.prototype.login =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/User/Login',\n      request,\n      metadata || {},\n      methodDescriptor_User_Login);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.Empty>}\n */\nconst methodDescriptor_User_Authenticate = new grpc.web.MethodDescriptor(\n  '/User/Authenticate',\n  grpc.web.MethodType.UNARY,\n  empty_pb.Empty,\n  empty_pb.Empty,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Empty,\n *   !proto.Empty>}\n */\nconst methodInfo_User_Authenticate = new grpc.web.AbstractClientBase.MethodInfo(\n  empty_pb.Empty,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  empty_pb.Empty.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.Empty)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.Empty>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.UserClient.prototype.authenticate =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/User/Authenticate',\n      request,\n      metadata || {},\n      methodDescriptor_User_Authenticate,\n      callback);\n};\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.Empty>}\n *     Promise that resolves to the response\n */\nproto.UserPromiseClient.prototype.authenticate =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/User/Authenticate',\n      request,\n      metadata || {},\n      methodDescriptor_User_Authenticate);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.Empty,\n *   !proto.UserInfo>}\n */\nconst methodDescriptor_User_AuthenticateGetUserInfo = new grpc.web.MethodDescriptor(\n  '/User/AuthenticateGetUserInfo',\n  grpc.web.MethodType.UNARY,\n  empty_pb.Empty,\n  proto.UserInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.UserInfo.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.Empty,\n *   !proto.UserInfo>}\n */\nconst methodInfo_User_AuthenticateGetUserInfo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.UserInfo,\n  /**\n   * @param {!proto.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.UserInfo.deserializeBinary\n);\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.UserInfo)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.UserInfo>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.UserClient.prototype.authenticateGetUserInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/User/AuthenticateGetUserInfo',\n      request,\n      metadata || {},\n      methodDescriptor_User_AuthenticateGetUserInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.Empty} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.UserInfo>}\n *     Promise that resolves to the response\n */\nproto.UserPromiseClient.prototype.authenticateGetUserInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/User/AuthenticateGetUserInfo',\n      request,\n      metadata || {},\n      methodDescriptor_User_AuthenticateGetUserInfo);\n};\n\n\nmodule.exports = proto;\n\n"],"sourceRoot":""}