# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.dataset_pb2 as dataset__pb2
import proto.empty_pb2 as empty__pb2


class DatasetStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDatasetInfoList = channel.unary_stream(
                '/Dataset/GetDatasetInfoList',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=dataset__pb2.DatasetInfo.FromString,
                )
        self.GetImageInfoList = channel.unary_stream(
                '/Dataset/GetImageInfoList',
                request_serializer=empty__pb2.Empty.SerializeToString,
                response_deserializer=dataset__pb2.ImageInfo.FromString,
                )
        self.GetChooseImageInfoList = channel.unary_stream(
                '/Dataset/GetChooseImageInfoList',
                request_serializer=dataset__pb2.SelectedDatasetInfo.SerializeToString,
                response_deserializer=dataset__pb2.ImageInfo.FromString,
                )
        self.RemoveImage = channel.unary_unary(
                '/Dataset/RemoveImage',
                request_serializer=dataset__pb2.SelectedImageInfo.SerializeToString,
                response_deserializer=empty__pb2.Empty.FromString,
                )
        self.CreateDatasetInfo = channel.unary_unary(
                '/Dataset/CreateDatasetInfo',
                request_serializer=dataset__pb2.NewDatasetInfo.SerializeToString,
                response_deserializer=empty__pb2.Empty.FromString,
                )


class DatasetServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDatasetInfoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImageInfoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChooseImageInfoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDatasetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDatasetInfoList': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDatasetInfoList,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=dataset__pb2.DatasetInfo.SerializeToString,
            ),
            'GetImageInfoList': grpc.unary_stream_rpc_method_handler(
                    servicer.GetImageInfoList,
                    request_deserializer=empty__pb2.Empty.FromString,
                    response_serializer=dataset__pb2.ImageInfo.SerializeToString,
            ),
            'GetChooseImageInfoList': grpc.unary_stream_rpc_method_handler(
                    servicer.GetChooseImageInfoList,
                    request_deserializer=dataset__pb2.SelectedDatasetInfo.FromString,
                    response_serializer=dataset__pb2.ImageInfo.SerializeToString,
            ),
            'RemoveImage': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveImage,
                    request_deserializer=dataset__pb2.SelectedImageInfo.FromString,
                    response_serializer=empty__pb2.Empty.SerializeToString,
            ),
            'CreateDatasetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDatasetInfo,
                    request_deserializer=dataset__pb2.NewDatasetInfo.FromString,
                    response_serializer=empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Dataset', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Dataset(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDatasetInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Dataset/GetDatasetInfoList',
            empty__pb2.Empty.SerializeToString,
            dataset__pb2.DatasetInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImageInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Dataset/GetImageInfoList',
            empty__pb2.Empty.SerializeToString,
            dataset__pb2.ImageInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChooseImageInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Dataset/GetChooseImageInfoList',
            dataset__pb2.SelectedDatasetInfo.SerializeToString,
            dataset__pb2.ImageInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Dataset/RemoveImage',
            dataset__pb2.SelectedImageInfo.SerializeToString,
            empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDatasetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Dataset/CreateDatasetInfo',
            dataset__pb2.NewDatasetInfo.SerializeToString,
            empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
